out
str s.getmacro("KNOWNFOLDERID")
ARRAY(str) a
str rx=
 (?ms)^ *FOLDERID_(\w+).+?
 GUID *\{(\w{8})-(\w{4})-(\w{4})-(\w{4})-(\w{4})(\w{8})\} *(?-s)
 .+
 Folder Type *(\w+)
 .+
 CSIDL(?:.+?introduced in Windows (\S+))?
findrx(s rx 0 4 a)
 for(i 0 a.len) out a[1 i]
 out a.len
if(a.len<119) end "must be at least 119" ;;119 + 2 obsolete-undefined

str sMain sVirtual sVirtualIDLIST

int i
for i 0 a.len
	str folder=a[1 i]
	str folderType=a[8 i]
	str winVer=a[9 i]
	str guid=F"0x{a[2 i]}, 0x{a[3 i]}{a[4 i]}, 0x{a[5 i]}{a[6 i]}, 0x{a[7 i]}"
	 out F"{folderType} {winVer}"
	
	sel winVer 8
		case ["","Vista","7"]
		case "8" folder+"_Win8"
		case "8.1" folder+"_Win81"
		case else end F"{winVer} is unknown"
	
	if folderType="VIRTUAL"
		sVirtual+F"public static FolderPath {folder} {{ get {{ return _GetV({guid}); } }[]"
		sVirtualIDLIST+F"public static IntPtr {folder} {{ get {{ return _GetVI({guid}); } }[]"
	else
		sMain+F"public static FolderPath {folder} {{ get {{ return _Get({guid}); } }[]"

s=
F
 #region generated by macro "{__FUNCTION__}"
 
 {sMain}
 [DebuggerStepThrough]
 public static class Virtual
 {{
 {sVirtual}}
 
 [DebuggerStepThrough]
 public static class VirtualITEMIDLIST
 {{
 {sVirtualIDLIST}}
 
 #endregion
;
out s
s.setclip
