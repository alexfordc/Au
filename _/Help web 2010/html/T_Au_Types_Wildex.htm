<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { }.OH_footer { }</style><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Wildex Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Wildex class" /><meta name="System.Keywords" content="Au.Types.Wildex class" /><meta name="Microsoft.Help.F1" content="Au.Types.Wildex" /><meta name="Microsoft.Help.Id" content="T:Au.Types.Wildex" /><meta name="Description" content="This class implements wildcard expression parsing and matching (comparing). Typically used in 'find' functions. For example, Wnd.Find uses it to compare window name, class name and program." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Au.Types" /><meta name="file" content="T_Au_Types_Wildex" /><meta name="guid" content="T_Au_Types_Wildex" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="OH_outerDiv"><div class="OH_outerContent"><table class="TitleTable"><tr><td class="OH_tdTitleColumn"><h1>Wildex Class</h1></td><td class="OH_tdRunningTitleColumn">Au Class Library</td></tr></table><div id="mainSection"><div id="mainBody"><span class="introStyle"></span> <div class="summary">
            This class implements <a href="0248143b-a0dd-4fa1-84f9-76831db6714a.htm">wildcard expression</a> parsing and matching (comparing).<br />            Typically used in 'find' functions. For example, <a href="M_Au_Wnd_Find.htm">Wnd.Find</a> uses it to compare window name, class name and program.<br />            The 'find' function creates a Wildex instance (which parses the wildcard expression), then calls <a href="M_Au_Types_Wildex_Match.htm">Wildex.Match</a> for each item (eg window) to compare some its property text.
            </div><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Inheritance Hierarchy</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="LST101FEB22_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST101FEB22_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><br />  <span class="selflink">Au.Types<span id="LST101FEB22_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST101FEB22_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Wildex</span><br /><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Au_Types.htm">Au.Types</a><br />
    <strong>Assembly:</strong>
   Au (in Au.dll) Version: 1.0.0.0<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><div class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EACA_tabimgleft"> </div><div id="ID0EACA_tab1" class="OH_CodeSnippetContainerTabSolo">C#</div><div class="OH_CodeSnippetContainerTabRightActive" id="ID0EACA_tabimgright"> </div></div><div class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EACA_copyCode" href="#" class="OH_copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EACA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">Wildex</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACA");</script><p>The <span class="selflink">Wildex</span> type exposes the following members.</p><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Constructors</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><table class="members" id="constructorList"><tr><th class="ps_iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Au_Types_Wildex__ctor.htm">Wildex</a></td><td><div class="summary">Initializes a new instance of the <span class="selflink">Wildex</span> class</div></td></tr></table><a href="#mainBody">Top</a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Properties</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><table class="members" id="propertyList"><tr><th class="ps_iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Au_Types_Wildex_IgnoreCase.htm">IgnoreCase</a></td><td><div class="summary">
            Is case-insensitive?
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Au_Types_Wildex_MultiArray.htm">MultiArray</a></td><td><div class="summary">            Array of Wildex variables, one for each part in multi-part text.<br />            null if TextType is not Multi (no option m).</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Au_Types_Wildex_Not.htm">Not</a></td><td><div class="summary">
            Has option n?
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Au_Types_Wildex_RegexNet.htm">RegexNet</a></td><td><div class="summary">            Gets the Regex object created from regular expression string.<br />            null if TextType is not RegexNet (no option R).</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Au_Types_Wildex_RegexPcre.htm">RegexPcre</a></td><td><div class="summary">            Gets the Regex object created from regular expression string.<br />            null if TextType is not RegexPcre (no option r).</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Au_Types_Wildex_Text.htm">Text</a></td><td><div class="summary">            Gets the wildcard or simple text.<br />            null if TextType is Regex or Multi.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Au_Types_Wildex_TextType.htm">TextType</a></td><td><div class="summary">
            Gets the type of text (wildcard, regex, etc).
            </div></td></tr></table><a href="#mainBody">Top</a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Methods</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><table class="members" id="methodList"><tr><th class="ps_iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Types_Wildex_HasWildcards.htm">HasWildcards</a></td><td><div class="summary">
            Returns true if string contains wildcard characters: '*', '?'.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Au_Types_Wildex_Match.htm">Match</a></td><td><div class="summary">
            Compares a string with the <a href="0248143b-a0dd-4fa1-84f9-76831db6714a.htm">wildcard expression</a> used to create this <span class="selflink">Wildex</span>.<br />            Returns true if they match.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Au_Types_Wildex_ToString.htm">ToString</a></td><td> (Overrides <a href="http://msdn2.microsoft.com/en-us/library/7bxwbwt2" target="_blank">Object<span id="LST101FEB22_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST101FEB22_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ToString<span id="LST101FEB22_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST101FEB22_3?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>.)</td></tr></table><a href="#mainBody">Top</a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Operators</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><table class="members" id="operatorList"><tr><th class="ps_iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/puboperator.gif" alt="Public operator" title="Public operator" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Types_Wildex_op_Implicit.htm"><span id="LST101FEB22_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST101FEB22_4?cs=Implicit|vb=Widening|cpp=Implicit|nu=Implicit|fs=Implicit");</script>(String to Wildex)</a></td><td><div class="summary">            Creates new Wildex from wildcard expression string.<br />            If the string is null, returns null.</div></td></tr></table><a href="#mainBody">Top</a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Exceptions</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><div class="tableSection"><table><tr><th class="ps_exceptionNameColumn">Exception</th><th class="ps_exceptionConditionColumn">Condition</th></tr><tr><td><a href="http://msdn2.microsoft.com/en-us/library/3w1b3114" target="_blank">ArgumentException</a></td><td>Invalid "**options " or regular expression.</td></tr></table></div><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Examples</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><div class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EAAABA_copyCode" href="#" class="OH_copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">//This version does not support wildcard expressions.</span>
Document Find1(<span class="highlight-keyword">string</span> name, <span class="highlight-keyword">string</span> date)
{
    <span class="highlight-keyword">return</span> Documents.Find(x =&gt; x.Name.Equals_(name) &amp;&amp; x.Date.Equals_(date));
}

<span class="highlight-comment">//This version supports wildcard expressions.</span>
<span class="highlight-comment">//null-string arguments are not compared.</span>
Document Find2(<span class="highlight-keyword">string</span> name, <span class="highlight-keyword">string</span> date)
{
    Wildex n = name, d = date; <span class="highlight-comment">//null if the string is null</span>
    <span class="highlight-keyword">return</span> Documents.Find(x =&gt; (n == <span class="highlight-keyword">null</span> || n.Match(x.Name)) &amp;&amp; (d == <span class="highlight-keyword">null</span> || d.Match(x.Date)));
}

<span class="highlight-comment">//Example of calling such function.</span>
<span class="highlight-comment">//Find item whose name is "example" (case-insensitive) and date starts with "2017-".</span>
<span class="highlight-keyword">var</span> item = x.Find2(<span class="highlight-literal">"example"</span>, <span class="highlight-literal">"2017-*"</span>);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABA");</script><div class="OH_CollapsibleAreaRegion" id="seeAlsoSection"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Au_Types.htm">Au.Types Namespace</a></div></div></div></div></div><div id="OH_footer" class="OH_footer"> </div></body></html>