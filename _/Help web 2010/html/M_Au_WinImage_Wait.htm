<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { }.OH_footer { }</style><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>WinImage.Wait Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Wait method" /><meta name="System.Keywords" content="WinImage.Wait method" /><meta name="Microsoft.Help.F1" content="Au.WinImage.Wait" /><meta name="Microsoft.Help.Id" content="M:Au.WinImage.Wait(System.Double,Au.Types.WIArea,System.Object,Au.Types.WIFlags,System.Int32,System.Func{Au.WinImage,Au.Types.WIAlso})" /><meta name="Description" content="Finds image(s) or color(s) displayed in window or other area. Waits until found." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Au" /><meta name="file" content="M_Au_WinImage_Wait" /><meta name="guid" content="M_Au_WinImage_Wait" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="OH_outerDiv"><div class="OH_outerContent"><table class="TitleTable"><tr><td class="OH_tdTitleColumn"><h1>WinImage<span id="LST2B6E89F3_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2B6E89F3_0?cpp=::|nu=.");</script>Wait Method </h1></td><td class="OH_tdRunningTitleColumn">Au Class Library</td></tr></table><div id="mainSection"><div id="mainBody"><span class="introStyle"></span> <div class="summary">
            Finds image(s) or color(s) displayed in window or other area. Waits until found.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Au.htm">Au</a><br />
    <strong>Assembly:</strong>
   Au (in Au.dll) Version: 1.0.0.0<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><div class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EACA_tabimgleft"> </div><div id="ID0EACA_tab1" class="OH_CodeSnippetContainerTabSolo">C#</div><div class="OH_CodeSnippetContainerTabRightActive" id="ID0EACA_tabimgright"> </div></div><div class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EACA_copyCode" href="#" class="OH_copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EACA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">WinImage</span> <span class="identifier">Wait</span>(
	<span class="identifier">double</span> <span class="parameter">secondsTimeout</span>,
	<span class="identifier">WIArea</span> <span class="parameter">area</span>,
	<span class="identifier">Object</span> <span class="parameter">image</span>,
	<span class="identifier">WIFlags</span> <span class="parameter">flags</span> = ,
	<span class="identifier">int</span> <span class="parameter">colorDiff</span> = 0,
	<span class="identifier">Func</span>&lt;<span class="identifier">WinImage</span>, <span class="identifier">WIAlso</span>&gt; <span class="parameter">also</span> = <span class="keyword">null</span>
)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">secondsTimeout</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">System<span id="LST2B6E89F3_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2B6E89F3_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Double</a><br />
            The maximal time to wait, seconds. If 0, waits infinitely. If &gt;0, after that time interval throws <a href="http://msdn2.microsoft.com/en-us/library/cke1faa2" target="_blank">System.TimeoutException</a>. If &lt;0, after that time interval returns null.
            </dd><dt><span class="parameter">area</span></dt><dd>Type: <a href="T_Au_Types_WIArea.htm">Au.Types<span id="LST2B6E89F3_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2B6E89F3_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>WIArea</a><br />
            Where to search. Can be a window/control, accessible object, another image or a rectangle in screen.
            <ul><li><a href="T_Au_Wnd.htm">Wnd</a> - window or control. The search area is its client area.</li><li><a href="T_Au_Acc.htm">Acc</a> - accessible object.</li><li><a href="http://msdn2.microsoft.com/en-us/library/4e7y164x" target="_blank">System.Drawing.Bitmap</a> - another image. These flags are invalid: <a href="T_Au_Types_WIFlags.htm">WIFlags.WindowDC</a>.</li><li><a href="T_Au_Types_RECT.htm">RECT</a> - a rectangle area in screen. These flags are invalid: <a href="T_Au_Types_WIFlags.htm">WIFlags.WindowDC</a>.</li><li><a href="T_Au_Types_WIArea.htm">WIArea</a> - can contain Wnd, Acc or Bitmap. Also allows to specify a rectangle in it, which makes the search area smaller and the function faster. Example: <span class="code">WinImage.Find((w, (left, top, width, height)), "image.png");</span>.</li></ul></dd><dt><span class="parameter">image</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="LST2B6E89F3_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2B6E89F3_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><br />
            Image or color to find. Can be of type:
            <ul><li>            string - path of .png or .bmp file.<br />            If not full path, uses <a href="P_Au_Folders_ThisAppImages.htm">Folders.ThisAppImages</a>.<br />            If the file does not exist, looks in resources of apdomain's entry assembly. For example, looks for Project.Properties.Resources.X if file @"C:\X.png" not found.</li><li>            string that starts with "image:" or "~:" - Base64-encoded .png or .bmp image embedded in script.<br />            If "image:", it is .png file data, else it is compressed .bmp file data.<br />            Can be created with function Au.Controls.ImageUtil.ImageToString (in Au.Controls.dll).</li><li>int, ColorInt or Color - color. Int must be in 0xRRGGBB format. Alpha is not used.</li><li><a href="http://msdn2.microsoft.com/en-us/library/4e7y164x" target="_blank">System.Drawing.Bitmap</a> - image object in memory.</li><li>IEnumerable of string, int/ColorInt/Color, Bitmap or object - multiple images or colors. Action - find any. To create a different action can be used callback function (parameter <span class="parameter">also</span>).</li></ul>
            Icons are not supported directly, but you can use <a href="M_Au_Icon__GetFileIconImage.htm">Icon_.GetFileIconImage</a> or <a href="M_Au_Icon__HandleToImage.htm">Icon_.HandleToImage</a>.<br />            Transparent and partially transparent pixels are not compared. For example, when you capture a non-rectangular area image, the image actually is rectangular, but pixels outside of its captured area are transparent and therefore not compared. Also you can draw transparent areas with an image editor that supports it, for example Paint.NET.</dd><dt><span class="parameter">flags</span> (Optional)</dt><dd>Type: <a href="T_Au_Types_WIFlags.htm">Au.Types<span id="LST2B6E89F3_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2B6E89F3_4?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>WIFlags</a><br /></dd><dt><span class="parameter">colorDiff</span> (Optional)</dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/td2s409d" target="_blank">System<span id="LST2B6E89F3_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2B6E89F3_5?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Int32</a><br />Maximal allowed color difference. Use to to find images that have slightly different colors than the specified image. Can be 0 - 250, but should be as small as possible. Applied to each color component (red, green, blue) of each pixel.</dd><dt><span class="parameter">also</span> (Optional)</dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/bb549151" target="_blank">System<span id="LST2B6E89F3_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2B6E89F3_6?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Func</a><span id="LST2B6E89F3_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2B6E89F3_7?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><a href="T_Au_WinImage.htm">WinImage</a>, <a href="T_Au_Types_WIAlso.htm">WIAlso</a><span id="LST2B6E89F3_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST2B6E89F3_8?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />
            Callback function. Called for each found image instance and receives its rectangle, match index and list index. Can return one of <a href="T_Au_Types_WIAlso.htm">WIAlso</a> values.<br />            Callback functions can be used to get rectangles of multiple found images, create custom behaviors/actions, etc. Examples:<ul><li>Skip some matching images if some condition if false: <span class="code">also: o =&gt; condition ? WIAlso.OkReturn : WIAlso.FindOther</span></li><li>Skip n matching images: <span class="code">also: o =&gt; o.Skip(n)</span></li><li>Get rectangles etc of all matching images: <span class="code">also: o =&gt; { list.Add(o); return false; }</span>. Don't use this code in 'wait' functions.</li><li>Get rectangles etc of all matching images and stop waiting: <span class="code">also: o =&gt; { list.Add(o); o.Found = true; return false; }</span></li><li>Do different actions depending on which list images found: <span class="code">var found = new BitArray(images.Length); WinImage.Find(w, images, also: o =&gt; { found[o.ListIndex] = true; return WIAlso.OkFindMoreOfList; }); if(found[0]) Print(0); if(found[1]) Print(1);</span></li></ul></dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="T_Au_WinImage.htm">WinImage</a><br />Returns <a href="T_Au_WinImage.htm">WinImage</a> object containing the rectangle of the found image. On timeout returns null if <span class="parameter">secondsTimeout</span> is negative; else exception.<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Exceptions</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><div class="tableSection"><table><tr><th class="ps_exceptionNameColumn">Exception</th><th class="ps_exceptionConditionColumn">Condition</th></tr><tr><td><a href="http://msdn2.microsoft.com/en-us/library/cke1faa2" target="_blank">TimeoutException</a></td><td><span class="parameter">secondsTimeout</span> time has expired (if &gt; 0).
  </td></tr><tr><td><a href="T_Au_Types_WndException.htm">WndException</a></td><td>Invalid window handle (the area argument), or the window closed while waiting.</td></tr><tr><td><a href="http://msdn2.microsoft.com/en-us/library/3w1b3114" target="_blank">ArgumentException</a></td><td>            An argument is of unsupported type or is/contains a null/invalid value.<br />            Image or area is a bottom-up Bitmap object (see <a href="http://msdn2.microsoft.com/en-us/library/zs4e8hdy" target="_blank">System.Drawing.Imaging.BitmapData.Stride</a>). Such bitmaps are unusual in .NET (GDI+), but can be created by <b>Image.FromHbitmap</b> (instead use <a href="M_Au_WinImage_BitmapFromHbitmap.htm">WinImage.BitmapFromHbitmap</a>).
            </td></tr><tr><td><a href="http://msdn2.microsoft.com/en-us/library/dzyy5k3x" target="_blank">FileNotFoundException</a></td><td>The specified file does not exist.</td></tr><tr><td><a href="http://msdn2.microsoft.com/en-us/library/c18k6c59" target="_blank">Exception</a></td><td>Depending on <span class="parameter">image</span> string format, exceptions of <a href="http://msdn2.microsoft.com/en-us/library/stf701f5" target="_blank">System.Drawing.Image.FromFile</a>, <a href="http://msdn2.microsoft.com/en-us/library/z7ha67kw" target="_blank">System.Drawing.Bitmap.#ctor</a>, <a href="M_Au_Convert__Decompress.htm">Convert_.Decompress</a>.</td></tr><tr><td><a href="T_Au_Types_AuException.htm">AuException</a></td><td>Something failed.</td></tr></table></div><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Remarks</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div>
            To create code for this function, use dialog "Find image or color in window". It is form <b>Au.Tools.Form_WinImage</b> in Au.Tools.dll.<br /><br />            The speed mostly depends on:<br />            1. The size of the search area. Use the smallest possible area (control or accessible object or rectangle in window like <span class="code">(w, rectangle)</span>).<br />            2. Flag <a href="T_Au_Types_WIFlags.htm">WIFlags.WindowDC</a>. Usually makes several times faster. With this flag the speed depends on window.<br />            3. Video driver. Can be much slower if incorrect, generic or virtual PC driver is used. Flag <a href="T_Au_Types_WIFlags.htm">WIFlags.WindowDC</a> should help.<br />            4. <span class="parameter">colorDiff</span>. Should be as small as possible.<br /><br />            If flag <a href="T_Au_Types_WIFlags.htm">WIFlags.WindowDC</a> is not used, the search area must be visible on the screen. If it is covered by other windows, the function will search in these windows.<br /><br />            The function can only find images that exactly match the specified image. With <span class="parameter">colorDiff</span> it can find images with slightly different colors and brightness. It cannot find images with different shapes.<br /><br />            This function is not the best way to find objects when the script is intended for long use or for use on multiple computers or must be very reliable. Because it may fail to find the image after are changed some settings - system theme, application theme, text size (DPI), font smoothing (if the image contains text), etc. Also are possible various unexpected temporary conditions that may distort or hide the image, for example adjacent window shadow, a tooltip or some temporary window. If possible, in such scripts instead use other functions, eg find control or accessible object.<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Examples</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div>
            Code created with dialog "Find image or color in window".
            <div class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EAAABA_copyCode" href="#" class="OH_copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">var</span> w = Wnd.Find(<span class="highlight-literal">"Window Name"</span>).OrThrow();
<span class="highlight-keyword">string</span> image = <span class="highlight-literal">"image:iVBORw0KGgoAAAANSUhEUgAAABYAAAANCAYAAACtpZ5jAAAAAXNSR0IArs4c..."</span>;
<span class="highlight-keyword">var</span> wi = WinImage.Find(w, image).OrThrow();
wi.Click();</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABA");</script><div class="OH_CollapsibleAreaRegion" id="seeAlsoSection"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Au_WinImage.htm">WinImage Class</a></div><div class="seeAlsoStyle"><a href="N_Au.htm">Au Namespace</a></div></div></div></div></div><div id="OH_footer" class="OH_footer"> </div></body></html>