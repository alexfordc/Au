<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { }.OH_footer { }</style><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Process_.Memory.SetMem Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="SetMem method" /><meta name="System.Keywords" content="Process_.Memory.SetMem method" /><meta name="Microsoft.Help.F1" content="Au.Process_.Memory.SetMem" /><meta name="Microsoft.Help.Id" content="M:Au.Process_.Memory.SetMem(System.IntPtr,System.Boolean)" /><meta name="Description" content="Sets an address of memory in that process that is to be used by the read and write functions." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Au" /><meta name="file" content="M_Au_Process__Memory_SetMem" /><meta name="guid" content="M_Au_Process__Memory_SetMem" /><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="OH_outerDiv"><div class="OH_outerContent"><table class="TitleTable"><tr><td class="OH_tdTitleColumn"><h1>Process_<span id="LST6E0DE5A9_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST6E0DE5A9_0?cpp=::|nu=.");</script>Memory<span id="LST6E0DE5A9_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST6E0DE5A9_1?cpp=::|nu=.");</script>SetMem Method </h1></td><td class="OH_tdRunningTitleColumn">Au Class Library</td></tr></table><div id="mainSection"><div id="mainBody"><span class="introStyle"></span> <div class="summary">
            Sets an address of memory in that process that is to be used by the read and write functions.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Au.htm">Au</a><br />
    <strong>Assembly:</strong>
   Au (in Au.dll) Version: 1.0.0.0<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><div class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EACA_tabimgleft"> </div><div id="ID0EACA_tab1" class="OH_CodeSnippetContainerTabSolo">C#</div><div class="OH_CodeSnippetContainerTabRightActive" id="ID0EACA_tabimgright"> </div></div><div class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EACA_copyCode" href="#" class="OH_copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EACA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">void</span> <span class="identifier">SetMem</span>(
	<span class="identifier">IntPtr</span> <span class="parameter">mem</span>,
	<span class="identifier">bool</span> <span class="parameter">freeWhenDisposing</span>
)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">mem</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/5he14kz8" target="_blank">System<span id="LST6E0DE5A9_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST6E0DE5A9_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IntPtr</a><br />A memory address in that process.</dd><dt><span class="parameter">freeWhenDisposing</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/a28wyd50" target="_blank">System<span id="LST6E0DE5A9_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST6E0DE5A9_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Boolean</a><br />
            Let the Dispose method (or finalizer) call API <a href="https://www.google.com/search?q=site:docs.microsoft.com+VirtualFreeEx" target="_blank">VirtualFreeEx</a> to free mem. The memory must be allocated with API <a href="https://www.google.com/search?q=site:docs.microsoft.com+VirtualAllocEx" target="_blank">VirtualAllocEx</a> (by any process) or <a href="https://www.google.com/search?q=site:docs.microsoft.com+VirtualAlloc" target="_blank">VirtualAlloc</a> (by that process).<br />            If false, mem can be any memory in that process, and this variable will not free it. Alternatively you can use <a href="M_Au_Process__Memory_ReadOther.htm">Process_.Memory.ReadOther</a> and <a href="M_Au_Process__Memory_WriteOther.htm">Process_.Memory.WriteOther</a>.</dd></dl><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Exceptions</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><div class="tableSection"><table><tr><th class="ps_exceptionNameColumn">Exception</th><th class="ps_exceptionConditionColumn">Condition</th></tr><tr><td><a href="http://msdn2.microsoft.com/en-us/library/2asft85a" target="_blank">InvalidOperationException</a></td><td>This variable already has Mem, unless it was set by this function with <span class="parameter">freeWhenDisposing</span> = false.</td></tr></table></div><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Remarks</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div>
            This function can be used if this variable was created with <i>nBytes</i> = 0. Else exception. Also exception if this function previously called with <span class="parameter">freeWhenDisposing</span> = true.
            <div class="OH_CollapsibleAreaRegion" id="seeAlsoSection"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Au_Process__Memory.htm">Process_<span id="LST6E0DE5A9_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST6E0DE5A9_4?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Memory Class</a></div><div class="seeAlsoStyle"><a href="N_Au.htm">Au Namespace</a></div></div></div></div></div><div id="OH_footer" class="OH_footer"> </div></body></html>