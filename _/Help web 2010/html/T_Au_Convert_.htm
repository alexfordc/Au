<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { }.OH_footer { }</style><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Convert_ Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Convert_ class" /><meta name="System.Keywords" content="Au.Convert_ class" /><meta name="Microsoft.Help.F1" content="Au.Convert_" /><meta name="Microsoft.Help.Id" content="T:Au.Convert_" /><meta name="Description" content="Data conversion functions - hash, compress, hex-encode, Base64, UTF8." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Au" /><meta name="file" content="T_Au_Convert_" /><meta name="guid" content="T_Au_Convert_" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="OH_outerDiv"><div class="OH_outerContent"><table class="TitleTable"><tr><td class="OH_tdTitleColumn"><h1>Convert_ Class</h1></td><td class="OH_tdRunningTitleColumn">Au Class Library</td></tr></table><div id="mainSection"><div id="mainBody"><span class="introStyle"></span> <div class="summary">
            Data conversion functions - hash, compress, hex-encode, Base64, UTF8.
            </div><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Inheritance Hierarchy</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="LST71C7F28B_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST71C7F28B_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><br />  <span class="selflink">Au<span id="LST71C7F28B_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST71C7F28B_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Convert_</span><br /><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Au.htm">Au</a><br />
    <strong>Assembly:</strong>
   Au (in Au.dll) Version: 1.0.0.0<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><div class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EACA_tabimgleft"> </div><div id="ID0EACA_tab1" class="OH_CodeSnippetContainerTabSolo">C#</div><div class="OH_CodeSnippetContainerTabRightActive" id="ID0EACA_tabimgright"> </div></div><div class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EACA_copyCode" href="#" class="OH_copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EACA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">Convert_</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACA");</script><p>The <span class="selflink">Convert_</span> type exposes the following members.</p><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Constructors</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><table class="members" id="constructorList"><tr><th class="ps_iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Au_Convert___ctor.htm">Convert_</a></td><td><div class="summary">Initializes a new instance of the <span class="selflink">Convert_</span> class</div></td></tr></table><a href="#mainBody">Top</a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Methods</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><table class="members" id="methodList"><tr><th class="ps_iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Convert__Base64Decode_1.htm">Base64Decode(String)</a></td><td><div class="summary">            Converts Base64 string to binary data (bytes).<br />            Returns byte[] containing the data.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Convert__Base64Decode.htm">Base64Decode(Char*, Int32, Void*, Int32)</a></td><td><div class="summary">            Converts Base64 UTF-16 string to binary data (bytes). Stores it in caller's memory buffer.<br />            Returns the number of bytes stored in resultBuffer.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Convert__Compress.htm">Compress</a></td><td><div class="summary">
            Compresses data using <a href="http://msdn2.microsoft.com/en-us/library/0y917bht" target="_blank">System.IO.Compression.DeflateStream</a>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Convert__Decompress.htm">Decompress(<span id="LST71C7F28B_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST71C7F28B_2?cpp=array&lt;");</script>Byte<span id="LST71C7F28B_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST71C7F28B_3?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">
            Decompresses data using <a href="http://msdn2.microsoft.com/en-us/library/0y917bht" target="_blank">System.IO.Compression.DeflateStream</a>.<br />            Returns byte[] containing decompressed data.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Au_Convert__Decompress_1.htm">Decompress(Stream, <span id="LST71C7F28B_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST71C7F28B_4?cpp=array&lt;");</script>Byte<span id="LST71C7F28B_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST71C7F28B_5?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32)</a></td><td><div class="summary">
            Decompresses data using <a href="http://msdn2.microsoft.com/en-us/library/0y917bht" target="_blank">System.IO.Compression.DeflateStream</a>.<br />            Writes the decompressed data to a caller-provided memory stream.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Convert__GuidFromHex.htm">GuidFromHex(String)</a></td><td><div class="summary">
            Converts hex GUID string to Guid struct.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Convert__GuidFromHex_1.htm">GuidFromHex(String, Guid<span id="LST71C7F28B_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST71C7F28B_6?cpp=%");</script>)</a></td><td><div class="summary">            Converts hex GUID string to Guid struct.<br />            Returns false if s is null or not a hex string of 32 length.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Convert__GuidToHex.htm">GuidToHex</a></td><td><div class="summary">
            Converts Guid struct to hex string without {}-.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Convert__Hash.htm">Hash(<span id="LST71C7F28B_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST71C7F28B_7?cpp=array&lt;");</script>Byte<span id="LST71C7F28B_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST71C7F28B_8?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, String)</a></td><td><div class="summary">
            Computes binary data hash using the specified cryptographic algorithm.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Convert__Hash_1.htm">Hash(String, String)</a></td><td><div class="summary">
            Computes string hash using the specified cryptographic algorithm.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Convert__HashFast_1.htm">HashFast(String)</a></td><td><div class="summary">
            FNV-1 hash, modified to make faster with long strings (then takes every n-th character).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Convert__HashFast.htm">HashFast(Char*, Int32)</a></td><td><div class="summary">
            FNV-1 hash, modified to make faster with long strings (then takes every n-th character).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Convert__HashFast_2.htm">HashFast(String, Int32, Int32)</a></td><td><div class="summary">            FNV-1 hash, modified to make faster with long strings (then takes every n-th character).<br />            This overload hashes a substring.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Convert__HashFnv1_1.htm">HashFnv1(<span id="LST71C7F28B_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST71C7F28B_9?cpp=array&lt;");</script>Byte<span id="LST71C7F28B_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST71C7F28B_10?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">            32-bit FNV-1 hash.<br />            Useful for fast hash table and checksum use, not cryptography. Similar to CRC32; faster but creates more collisions.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Convert__HashFnv1_3.htm">HashFnv1(String)</a></td><td><div class="summary">            32-bit FNV-1 hash.<br />            Useful for fast hash table and checksum use, not cryptography. Similar to CRC32; faster but creates more collisions.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Convert__HashFnv1.htm">HashFnv1(Byte*, Int32)</a></td><td><div class="summary">            32-bit FNV-1 hash.<br />            Useful for fast hash table and checksum use, not cryptography. Similar to CRC32; faster but creates more collisions.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Convert__HashFnv1_2.htm">HashFnv1(Char*, Int32)</a></td><td><div class="summary">            32-bit FNV-1 hash.<br />            Useful for fast hash table and checksum use, not cryptography. Similar to CRC32; faster but creates more collisions.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Convert__HashFnv1__1.htm">HashFnv1<span id="LST71C7F28B_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST71C7F28B_11?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST71C7F28B_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST71C7F28B_12?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(T)</a></td><td><div class="summary">            32-bit FNV-1 hash.<br />            Useful for fast hash table and checksum use, not cryptography. Similar to CRC32; faster but creates more collisions.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Convert__HashFnv1_64_1.htm">HashFnv1_64(<span id="LST71C7F28B_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST71C7F28B_13?cpp=array&lt;");</script>Byte<span id="LST71C7F28B_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST71C7F28B_14?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            64-bit FNV-1 hash.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Convert__HashFnv1_64_3.htm">HashFnv1_64(String)</a></td><td><div class="summary">
            64-bit FNV-1 hash.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Convert__HashFnv1_64.htm">HashFnv1_64(Byte*, Int32)</a></td><td><div class="summary">
            64-bit FNV-1 hash.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Convert__HashFnv1_64_2.htm">HashFnv1_64(Char*, Int32)</a></td><td><div class="summary">
            64-bit FNV-1 hash.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Convert__HashFnv1_64__1.htm">HashFnv1_64<span id="LST71C7F28B_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST71C7F28B_15?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST71C7F28B_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST71C7F28B_16?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(T)</a></td><td><div class="summary">
            64-bit FNV-1 hash.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Convert__HashHex.htm">HashHex(<span id="LST71C7F28B_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST71C7F28B_17?cpp=array&lt;");</script>Byte<span id="LST71C7F28B_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST71C7F28B_18?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, String)</a></td><td><div class="summary">
            Computes binary data hash using the specified cryptographic algorithm and converts to hex string.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Convert__HashHex_1.htm">HashHex(String, String)</a></td><td><div class="summary">
            Computes string hash using the specified cryptographic algorithm and converts to hex string.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Convert__HexDecode_1.htm">HexDecode(String)</a></td><td><div class="summary">
            Converts hex-encoded string to binary data. Stores it in byte[].
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Convert__HexDecode.htm">HexDecode(Char*, Int32, Void*, Int32)</a></td><td><div class="summary">
            The same as <a href="M_Au_Convert__HexDecode_2.htm">Convert_.HexDecode</a> but the string can be an unmanaged UTF-16 string.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Convert__HexDecode_2.htm">HexDecode(String, Void*, Int32, Int32)</a></td><td><div class="summary">            Converts hex-encoded string to binary data. Stores it in caller's memory buffer.<br />            Returns the number of bytes stored in resultBuffer memory. It is equal or less than Math.Min(bufferSize, (s.Length - stringStartIndex) / 2).</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Convert__HexEncode.htm">HexEncode(<span id="LST71C7F28B_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST71C7F28B_19?cpp=array&lt;");</script>Byte<span id="LST71C7F28B_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST71C7F28B_20?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Boolean)</a></td><td><div class="summary">
            Converts binary data stored in byte[] to hex-encoded string.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Convert__HexEncode_1.htm">HexEncode(Void*, Int32, Boolean)</a></td><td><div class="summary">
            Converts binary data stored in any memory to hex-encoded string.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Convert__Utf8FromString.htm">Utf8FromString(String)</a></td><td><div class="summary">
            Converts C# string to '\0'-terminated UTF8 string.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Convert__Utf8FromString_1.htm">Utf8FromString(String, Byte*, Int32)</a></td><td><div class="summary">            Converts C# string to '\0'-terminated UTF8 string. Stores the UTF8 string in caller's buffer.<br />            Returns UTF8 string length in bytes, not including the terminating '\0' character.<br />            If fails (unlikely if passed correct arguments), returns 0 and sets buffer="".</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Convert__Utf8LengthFromString.htm">Utf8LengthFromString</a></td><td><div class="summary">
            Returns the number of bytes that would by produced by converting C# string to UTF8, not including the terminating '\0' character.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Convert__Utf8ToString.htm">Utf8ToString</a></td><td><div class="summary">            Converts UTF8 string to C# string (which is UTF16).<br />            The terminating '\0' character is not included in the returned string.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Convert__Utf8ToStringLength.htm">Utf8ToStringLength</a></td><td><div class="summary">            Returns the number of characters that would by produced by converting UTF8 to C# string.<br />            The terminating '\0' character is not included in the return value.</div></td></tr></table><a href="#mainBody">Top</a><div class="OH_CollapsibleAreaRegion" id="seeAlsoSection"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Au.htm">Au Namespace</a></div></div></div></div></div><div id="OH_footer" class="OH_footer"> </div></body></html>