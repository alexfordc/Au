<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { }.OH_footer { }</style><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>NativeHeap.ReAlloc Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="ReAlloc method" /><meta name="System.Keywords" content="NativeHeap.ReAlloc method" /><meta name="Microsoft.Help.F1" content="Au.Util.NativeHeap.ReAlloc" /><meta name="Microsoft.Help.Id" content="M:Au.Util.NativeHeap.ReAlloc(System.Void*,Au.Types.LPARAM,System.Boolean)" /><meta name="Description" content="Reallocates a memory block to make it bigger or smaller. Returns its address, which in most cases is different than the old memory block address. Preserves data in Math.Min(old size, new size) bytes of old memory (copies from old memory if need)." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Au.Util" /><meta name="file" content="M_Au_Util_NativeHeap_ReAlloc" /><meta name="guid" content="M_Au_Util_NativeHeap_ReAlloc" /><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="OH_outerDiv"><div class="OH_outerContent"><table class="TitleTable"><tr><td class="OH_tdTitleColumn"><h1>NativeHeap<span id="LST9E92CFB2_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9E92CFB2_0?cpp=::|nu=.");</script>ReAlloc Method </h1></td><td class="OH_tdRunningTitleColumn">Au Class Library</td></tr></table><div id="mainSection"><div id="mainBody"><span class="introStyle"></span> <div class="summary">            Reallocates a memory block to make it bigger or smaller.<br />            Returns its address, which in most cases is different than the old memory block address.<br />            Preserves data in Math.Min(old size, new size) bytes of old memory (copies from old memory if need).<br />            Calls API <a href="https://www.google.com/search?q=site:docs.microsoft.com+HeapReAlloc" target="_blank">HeapReAlloc</a> or <a href="https://www.google.com/search?q=site:docs.microsoft.com+HeapAlloc" target="_blank">HeapAlloc</a>.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Au_Util.htm">Au.Util</a><br />
    <strong>Assembly:</strong>
   Au (in Au.dll) Version: 1.0.0.0<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><div class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EACA_tabimgleft"> </div><div id="ID0EACA_tab1" class="OH_CodeSnippetContainerTabSolo">C#</div><div class="OH_CodeSnippetContainerTabRightActive" id="ID0EACA_tabimgright"> </div></div><div class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EACA_copyCode" href="#" class="OH_copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EACA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">void</span>* <span class="identifier">ReAlloc</span>(
	<span class="identifier">void</span>* <span class="parameter">mem</span>,
	<span class="identifier">LPARAM</span> <span class="parameter">size</span>,
	<span class="identifier">bool</span> <span class="parameter">zeroInit</span> = <span class="keyword">false</span>
)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">mem</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/skf099af" target="_blank">System<span id="LST9E92CFB2_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9E92CFB2_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Void</a>*<br />Old memory address. If null, allocates new memory like Alloc.</dd><dt><span class="parameter">size</span></dt><dd>Type: <a href="T_Au_Types_LPARAM.htm">Au.Types<span id="LST9E92CFB2_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9E92CFB2_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>LPARAM</a><br />New byte count.</dd><dt><span class="parameter">zeroInit</span> (Optional)</dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/a28wyd50" target="_blank">System<span id="LST9E92CFB2_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9E92CFB2_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Boolean</a><br />When size is growing, set all added bytes = 0. If false (default), the added memory is uninitialized, ie random byte values. Slower when true.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="http://msdn2.microsoft.com/en-us/library/skf099af" target="_blank">Void</a>*<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Exceptions</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><div class="tableSection"><table><tr><th class="ps_exceptionNameColumn">Exception</th><th class="ps_exceptionConditionColumn">Condition</th></tr><tr><td><a href="http://msdn2.microsoft.com/en-us/library/5afc3sdf" target="_blank">OutOfMemoryException</a></td><td>Failed. Probably size is too big.</td></tr></table></div><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Remarks</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div>The memory is unmanaged and will not be freed automatically. Always call <a href="M_Au_Util_NativeHeap_Free.htm">Util.NativeHeap.Free</a> when done or ReAlloc if need to resize it without losing data.<div class="OH_CollapsibleAreaRegion" id="seeAlsoSection"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Au_Util_NativeHeap.htm">NativeHeap Class</a></div><div class="seeAlsoStyle"><a href="N_Au_Util.htm">Au.Util Namespace</a></div></div></div></div></div><div id="OH_footer" class="OH_footer"> </div></body></html>