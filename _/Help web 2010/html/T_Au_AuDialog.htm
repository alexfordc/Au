<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { }.OH_footer { }</style><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>AuDialog Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="AuDialog class" /><meta name="System.Keywords" content="Au.AuDialog class" /><meta name="Microsoft.Help.F1" content="Au.AuDialog" /><meta name="Microsoft.Help.Id" content="T:Au.AuDialog" /><meta name="Description" content="Standard dialogs to show information or get user input." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Au" /><meta name="file" content="T_Au_AuDialog" /><meta name="guid" content="T_Au_AuDialog" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="OH_outerDiv"><div class="OH_outerContent"><table class="TitleTable"><tr><td class="OH_tdTitleColumn"><h1>AuDialog Class</h1></td><td class="OH_tdRunningTitleColumn">Au Class Library</td></tr></table><div id="mainSection"><div id="mainBody"><span class="introStyle"></span> <div class="summary">
            Standard dialogs to show information or get user input.
            </div><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Inheritance Hierarchy</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="LSTAAD63230_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAAD63230_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><br />  <span class="selflink">Au<span id="LSTAAD63230_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAAD63230_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>AuDialog</span><br /><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Au.htm">Au</a><br />
    <strong>Assembly:</strong>
   Au (in Au.dll) Version: 1.0.0.0<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><div class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EACA_tabimgleft"> </div><div id="ID0EACA_tab1" class="OH_CodeSnippetContainerTabSolo">C#</div><div class="OH_CodeSnippetContainerTabRightActive" id="ID0EACA_tabimgright"> </div></div><div class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EACA_copyCode" href="#" class="OH_copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EACA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">AuDialog</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACA");</script><p>The <span class="selflink">AuDialog</span> type exposes the following members.</p><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Constructors</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><table class="members" id="constructorList"><tr><th class="ps_iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Au_AuDialog__ctor.htm">AuDialog<span id="LSTAAD63230_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAAD63230_2?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">Initializes a new instance of the <span class="selflink">AuDialog</span> class</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Au_AuDialog__ctor_1.htm">AuDialog(String, String, String, DFlags, DIcon, AnyWnd, String, String, String, String, String, Int32, Coord, Coord, Int32, Action<span id="LSTAAD63230_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAAD63230_3?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>DEventArgs<span id="LSTAAD63230_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAAD63230_4?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Initializes a new <span class="selflink">AuDialog</span> instance and sets main properties.<br />            Parameters etc are of <a href="M_Au_AuDialog_ShowEx.htm">AuDialog.ShowEx</a>.
            </div></td></tr></table><a href="#mainBody">Top</a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Properties</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><table class="members" id="propertyList"><tr><th class="ps_iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Au_AuDialog_DefaultButton.htm">DefaultButton</a></td><td><div class="summary">            Specifies which button responds to the Enter key.<br />            If 0 or not set, auto-selects.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Au_AuDialog_DialogWindow.htm">DialogWindow</a></td><td><div class="summary">            Gets dialog window handle as Wnd.<br />            Returns default(Wnd) if the dialog is not open.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Au_AuDialog_EditControl.htm">EditControl</a></td><td><div class="summary">
            Gets edit control handle as Wnd.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Au_AuDialog_FlagCanBeMinimized.htm">FlagCanBeMinimized</a></td><td><div class="summary">
            Add 'Minimize' button to the title bar.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Au_AuDialog_FlagEndThread.htm">FlagEndThread</a></td><td><div class="summary">
            Call <a href="http://msdn2.microsoft.com/en-us/library/ty8d3wta" target="_blank">System.Threading.Thread.Abort</a> if selected OK button when there are no other buttons. Also when selected Cancel, No, and on timeout.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Au_AuDialog_FlagRtlLayout.htm">FlagRtlLayout</a></td><td><div class="summary">            Right-to left layout.<br />            Default is AuDialog.Options.RtlLayout.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Au_AuDialog_FlagShowMarqueeProgressBar.htm">FlagShowMarqueeProgressBar</a></td><td><div class="summary">
            Show progress bar that just plays an animation but does not indicate which part of the work is already done.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Au_AuDialog_FlagShowProgressBar.htm">FlagShowProgressBar</a></td><td><div class="summary">
            Show progress bar.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Au_AuDialog_FlagTopmost.htm">FlagTopmost</a></td><td><div class="summary">            Makes the dialog window topmost or non-topmost.<br />            If true, will set topmost style when creating the dialog. If false, will not set.<br />            If null (default), the dialog will be topmost if both these are true: no owner window, AuDialog.Options.TopmostIfNoOwnerWindow is true.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Au_AuDialog_FlagXCancel.htm">FlagXCancel</a></td><td><div class="summary">            Allow to cancel even if there is no Cancel button.<br />            It adds X (Close) button to the title bar, and also allows to close the dialog with the Esc key.<br />            When the dialog is closed with the X button or Esc, the returned result button id is 0 if there is no Cancel button; else the same as when clicked the Cancel button.<br />            The same as <a href="T_Au_Types_DFlags.htm">DFlags.XCancel</a>.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Au_AuDialog_IsOpen.htm">IsOpen</a></td><td><div class="summary">
            Returns true if the dialog is open and your code can send messages to it.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Au_AuDialog_Result.htm">Result</a></td><td><div class="summary">            Gets selected button id and other results packed in a DResult variable.<br />            It is the same variable as the ShowDialog return value.<br />            If the result is still unavailable (eg the dialog still not closed):<br />            	If called from the same thread that called ShowDialog, returns null.<br />            	If called from another thread, waits until the dialog is closed and the return value is available.<br />            	Note that ShowDialogNoWait calls ShowDialog in another thread.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Au_AuDialog_Screen.htm">Screen</a></td><td><div class="summary">            Sets the screen (display monitor) where to show the dialog in multi-screen environment.<br />            If null or not set, will be used owner window's screen or <a href="P_Au_AuDialog_Options_DefaultScreen.htm">AuDialog.Options.DefaultScreen</a>.<br />            If screen index is invalid, the 'show' method shows warning, no exception.<br />            More info: <a href="T_Au_Types_Screen_.htm">Screen_</a>, <a href="M_Au_Wnd_MoveInScreen.htm">Wnd.MoveInScreen</a>.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Au_AuDialog_Send.htm">Send</a></td><td><div class="summary">
            Allows to modify dialog controls while it is open, and close the dialog.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Au_AuDialog_Width.htm">Width</a></td><td><div class="summary">            Sets the width of the dialog's client area.<br />            The actual width will depend on DPI (the Windows "text size" setting).<br />            If less than default width, will be used default width.</div></td></tr></table><a href="#mainBody">Top</a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Methods</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><table class="members" id="methodList"><tr><th class="ps_iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Au_AuDialog_SetButtons.htm">SetButtons</a></td><td><div class="summary">
            Sets common and/or custom buttons and custom buttons style.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Au_AuDialog_SetCheckbox.htm">SetCheckbox</a></td><td><div class="summary">            Adds check box (if text is not null/empty).<br />            To get check box state after closing the dialog, use the IsChecked property of the <a href="T_Au_Types_DResult.htm">DResult</a> variable returned by <a href="M_Au_AuDialog_ShowDialog.htm">AuDialog.ShowDialog</a> or the <a href="P_Au_AuDialog_Result.htm">AuDialog.Result</a> property.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Au_AuDialog_SetEditControl.htm">SetEditControl</a></td><td><div class="summary">            Adds Edit or Combo control (if editType is not DEdit.None (0)).<br />            To get its text after closing the dialog, use the EditText property of the <a href="T_Au_Types_DResult.htm">DResult</a> variable returned by <a href="M_Au_AuDialog_ShowDialog.htm">AuDialog.ShowDialog</a> or the <a href="P_Au_AuDialog_Result.htm">AuDialog.Result</a> property.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Au_AuDialog_SetExpandControl.htm">SetExpandControl</a></td><td><div class="summary">
            Set properties of the control that shows and hides text added by <a href="M_Au_AuDialog_SetExpandedText.htm">AuDialog.SetExpandedText</a>.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Au_AuDialog_SetExpandedText.htm">SetExpandedText</a></td><td><div class="summary">
            Adds text that the user can show and hide.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Au_AuDialog_SetFooterText.htm">SetFooterText(String)</a></td><td><div class="summary">
            Adds text and common icon at the bottom of the dialog.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Au_AuDialog_SetFooterText_1.htm">SetFooterText(String, DIcon)</a></td><td><div class="summary">
            Adds text and common icon at the bottom of the dialog.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Au_AuDialog_SetFooterText_2.htm">SetFooterText(String, Icon)</a></td><td><div class="summary">
            Adds text and custom icon at the bottom of the dialog.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Au_AuDialog_SetIcon_1.htm">SetIcon(Icon)</a></td><td><div class="summary">
            Sets custom icon.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Au_AuDialog_SetIcon.htm">SetIcon(DIcon)</a></td><td><div class="summary">
            Sets common icon.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Au_AuDialog_SetOwnerWindow.htm">SetOwnerWindow</a></td><td><div class="summary">            Sets owner window.<br />            The owner window will be disabled, and this dialog will be on top of it.<br />            This window will be in owner's screen, if screen was not explicitly specified with the <a href="P_Au_AuDialog_Screen.htm">AuDialog.Screen</a> property. <a href="P_Au_AuDialog_Options_DefaultScreen.htm">AuDialog.Options.DefaultScreen</a> is ignored.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Au_AuDialog_SetRadioButtons.htm">SetRadioButtons</a></td><td><div class="summary">            Adds radio buttons.<br />            To get selected radio button id after closing the dialog, use the RadioButton property of the <a href="T_Au_Types_DResult.htm">DResult</a> variable returned by <a href="M_Au_AuDialog_ShowDialog.htm">AuDialog.ShowDialog</a> or the <a href="P_Au_AuDialog_Result.htm">AuDialog.Result</a> property.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Au_AuDialog_SetText.htm">SetText</a></td><td><div class="summary">
            Sets text.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Au_AuDialog_SetTimeout.htm">SetTimeout</a></td><td><div class="summary">            Let the dialog close itself after closeAfterS seconds.<br />            On timeout ShowDialog returns DResult.Timeout.<br />            Example: <span class="code">d.SetTimeout(30, "OK");</span></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Au_AuDialog_SetTitleBarText.htm">SetTitleBarText</a></td><td><div class="summary">            Changes title bar text.<br />            If you don't call this method or title is null or "", dialogs will use <a href="P_Au_AuDialog_Options_DefaultTitle.htm">AuDialog.Options.DefaultTitle</a>.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Au_AuDialog_SetXY.htm">SetXY</a></td><td><div class="summary">
            Sets dialog position in screen.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Au_AuDialog_Show.htm">Show</a></td><td><div class="summary">            Shows dialog.<br />            Returns selected button id.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Au_AuDialog_ShowDialog.htm">ShowDialog</a></td><td><div class="summary">            Shows the dialog.<br />            Returns selected button id and other results packed in a <a href="T_Au_Types_DResult.htm">DResult</a> variable.<br />            Call this method after setting text and other properties.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Au_AuDialog_ShowDialogNoWait.htm">ShowDialogNoWait</a></td><td><div class="summary">
            Shows the dialog in new thread and returns without waiting until it is closed.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_AuDialog_ShowError.htm">ShowError</a></td><td><div class="summary">            Shows dialog with DIcon.Error icon.<br />            Calls <a href="M_Au_AuDialog_Show.htm">AuDialog.Show</a>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Au_AuDialog_ShowEx.htm">ShowEx</a></td><td><div class="summary">            Shows dialog.<br />            Returns selected button id and other results packed in a <a href="T_Au_Types_DResult.htm">DResult</a> variable.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_AuDialog_ShowYesNo.htm">ShowYesNo</a></td><td><div class="summary">            Shows dialog with Yes and No buttons.<br />            Returns true if selected Yes.<br />            Calls <a href="M_Au_AuDialog_Show.htm">AuDialog.Show</a>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_AuDialog_ShowInfo.htm">ShowInfo</a></td><td><div class="summary">            Shows dialog with DIcon.Info icon.<br />            Calls <a href="M_Au_AuDialog_Show.htm">AuDialog.Show</a>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Au_AuDialog_ShowList.htm">ShowList</a></td><td><div class="summary">            Shows dialog with a list of command-link buttons.<br />            Returns 1-based index of the selected button. Returns 0 if clicked the X (close window) button or pressed Esc.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Au_AuDialog_ShowListEx.htm">ShowListEx</a></td><td><div class="summary">            Shows dialog with a list of command-link buttons.<br />            Returns results packed in a <a href="T_Au_Types_DResult.htm">DResult</a> variable. Its Button property is id of the selected button, which is its 1-based index in the list; it is 0 if clicked the X (close window) button or pressed Esc.<br />            The return value can be assigned to an int variable or used in switch; then it is the id (1-based index or 0).</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_AuDialog_ShowNoWait.htm">ShowNoWait</a></td><td><div class="summary">
            Shows dialog like <a href="M_Au_AuDialog_Show.htm">AuDialog.Show</a> but does not wait.<br />            Creates dialog in other thread and returns without waiting until it is closed.<br />            Returns <span class="selflink">AuDialog</span> variable that can be used to communicate with the dialog using these methods and properties: <a href="P_Au_AuDialog_IsOpen.htm">AuDialog.IsOpen</a>, <a href="M_Au_AuDialog_ThreadWaitForClosed.htm">AuDialog.ThreadWaitForClosed</a>, <a href="P_Au_AuDialog_Result.htm">AuDialog.Result</a> (when closed), <a href="P_Au_AuDialog_DialogWindow.htm">AuDialog.DialogWindow</a>, <a href="P_Au_AuDialog_Send.htm">AuDialog.Send</a>. Through the <b>Send</b> property you can modify controls and close the dialog. Example in <a href="M_Au_AuDialog_ShowNoWaitEx.htm">AuDialog.ShowNoWaitEx</a> topic.<br />            Parameters are the same as with <a href="M_Au_AuDialog_Show.htm">AuDialog.Show</a>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Au_AuDialog_ShowNoWaitEx.htm">ShowNoWaitEx</a></td><td><div class="summary">
            Shows dialog like <a href="M_Au_AuDialog_ShowEx.htm">AuDialog.ShowEx</a> but does not wait.<br />            Creates dialog in other thread and returns without waiting until it is closed.<br />            Returns <span class="selflink">AuDialog</span> variable that can be used to communicate with the dialog using these methods and properties: <a href="P_Au_AuDialog_IsOpen.htm">AuDialog.IsOpen</a>, <a href="M_Au_AuDialog_ThreadWaitForClosed.htm">AuDialog.ThreadWaitForClosed</a>, <a href="P_Au_AuDialog_Result.htm">AuDialog.Result</a> (when closed), <a href="P_Au_AuDialog_DialogWindow.htm">AuDialog.DialogWindow</a>, <a href="P_Au_AuDialog_Send.htm">AuDialog.Send</a>; through the Send property you can modify controls and close the dialog (see example).<br />            Parameters are the same as with <a href="M_Au_AuDialog_ShowEx.htm">AuDialog.ShowEx</a>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Au_AuDialog_ShowNumberInput.htm">ShowNumberInput</a></td><td><div class="summary">            Shows dialog with a number edit field and buttons OK and Cancel, and gets that number.<br />            Returns true if selected OK, false if Cancel.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_AuDialog_ShowOKCancel.htm">ShowOKCancel</a></td><td><div class="summary">            Shows dialog with OK and Cancel buttons.<br />            Returns true if selected OK.<br />            Calls <a href="M_Au_AuDialog_Show.htm">AuDialog.Show</a>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Au_AuDialog_ShowProgress.htm">ShowProgress</a></td><td><div class="summary">            Shows dialog with progress bar.<br />            Creates dialog in other thread and returns without waiting until it is closed.<br />            Returns <span class="selflink">AuDialog</span> variable that can be used to communicate with the dialog using these methods and properties: <a href="P_Au_AuDialog_IsOpen.htm">AuDialog.IsOpen</a>, <a href="M_Au_AuDialog_ThreadWaitForClosed.htm">AuDialog.ThreadWaitForClosed</a>, <a href="P_Au_AuDialog_Result.htm">AuDialog.Result</a> (when closed), <a href="P_Au_AuDialog_DialogWindow.htm">AuDialog.DialogWindow</a>, <a href="P_Au_AuDialog_Send.htm">AuDialog.Send</a>; through the Send property you can set progress, modify controls and close the dialog (see example).<br />            All parameters except marquee are the same as with <a href="M_Au_AuDialog_ShowEx.htm">AuDialog.ShowEx</a>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Au_AuDialog_ShowProgressEx.htm">ShowProgressEx</a></td><td><div class="summary">            Shows dialog with progress bar.<br />            Creates dialog in new thread and returns without waiting until it is closed.<br />            Returns <span class="selflink">AuDialog</span> variable that can be used to communicate with the dialog using these methods and properties: <a href="P_Au_AuDialog_IsOpen.htm">AuDialog.IsOpen</a>, <a href="M_Au_AuDialog_ThreadWaitForClosed.htm">AuDialog.ThreadWaitForClosed</a>, <a href="P_Au_AuDialog_Result.htm">AuDialog.Result</a> (when closed), <a href="P_Au_AuDialog_DialogWindow.htm">AuDialog.DialogWindow</a>, <a href="P_Au_AuDialog_Send.htm">AuDialog.Send</a>; through the Send property you can set progress, modify controls and close the dialog (see example).<br />            Most parameters are the same as with <a href="M_Au_AuDialog_ShowEx.htm">AuDialog.ShowEx</a>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Au_AuDialog_ShowTextInput.htm">ShowTextInput</a></td><td><div class="summary">            Shows dialog with a text edit field and buttons OK and Cancel, and gets that text.<br />            Returns true if selected OK, false if Cancel.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Au_AuDialog_ShowTextInputEx.htm">ShowTextInputEx</a></td><td><div class="summary">            Shows dialog with a text edit field, buttons OK and Cancel, optionally check box, radio buttons and custom buttons.<br />            Returns results packed in a DResult variable: selected button id (1 for OK, 2 for Cancel), text and check box state.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_AuDialog_ShowWarning.htm">ShowWarning</a></td><td><div class="summary">            Shows dialog with DIcon.Warning icon.<br />            Calls <a href="M_Au_AuDialog_Show.htm">AuDialog.Show</a>.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Au_AuDialog_ThreadWaitForClosed.htm">ThreadWaitForClosed</a></td><td><div class="summary">
            Can be used by other threads to wait until the dialog is closed.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Au_AuDialog_ThreadWaitForOpen.htm">ThreadWaitForOpen</a></td><td><div class="summary">            Can be used by other threads to wait until the dialog is open.<br />            If returns true, the dialog is open and you can send messages to it.<br />            If returns false, the dialog is already closed or failed to show.</div></td></tr></table><a href="#mainBody">Top</a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Events</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><table class="members" id="eventList"><tr><th class="ps_iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubevent.gif" alt="Public event" title="Public event" /></td><td><a href="E_Au_AuDialog_ButtonClicked.htm">ButtonClicked</a></td><td><div class="summary">            AuDialog events.<br />            Occurs when the internal <a href="https://www.google.com/search?q=site:docs.microsoft.com+TaskDialogCallbackProc" target="_blank">TaskDialogCallbackProc</a> function is called by the task dialog API.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubevent.gif" alt="Public event" title="Public event" /></td><td><a href="E_Au_AuDialog_Created.htm">Created</a></td><td><div class="summary">            AuDialog events.<br />            Occurs when the internal <a href="https://www.google.com/search?q=site:docs.microsoft.com+TaskDialogCallbackProc" target="_blank">TaskDialogCallbackProc</a> function is called by the task dialog API.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubevent.gif" alt="Public event" title="Public event" /></td><td><a href="E_Au_AuDialog_Destroyed.htm">Destroyed</a></td><td><div class="summary">            AuDialog events.<br />            Occurs when the internal <a href="https://www.google.com/search?q=site:docs.microsoft.com+TaskDialogCallbackProc" target="_blank">TaskDialogCallbackProc</a> function is called by the task dialog API.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubevent.gif" alt="Public event" title="Public event" /></td><td><a href="E_Au_AuDialog_HelpF1.htm">HelpF1</a></td><td><div class="summary">            AuDialog events.<br />            Occurs when the internal <a href="https://www.google.com/search?q=site:docs.microsoft.com+TaskDialogCallbackProc" target="_blank">TaskDialogCallbackProc</a> function is called by the task dialog API.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubevent.gif" alt="Public event" title="Public event" /></td><td><a href="E_Au_AuDialog_HyperlinkClicked.htm">HyperlinkClicked</a></td><td><div class="summary">            AuDialog events.<br />            Occurs when the internal <a href="https://www.google.com/search?q=site:docs.microsoft.com+TaskDialogCallbackProc" target="_blank">TaskDialogCallbackProc</a> function is called by the task dialog API.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubevent.gif" alt="Public event" title="Public event" /></td><td><a href="E_Au_AuDialog_OtherEvents.htm">OtherEvents</a></td><td><div class="summary">            AuDialog events.<br />            Occurs when the internal <a href="https://www.google.com/search?q=site:docs.microsoft.com+TaskDialogCallbackProc" target="_blank">TaskDialogCallbackProc</a> function is called by the task dialog API.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubevent.gif" alt="Public event" title="Public event" /></td><td><a href="E_Au_AuDialog_Timer.htm">Timer</a></td><td><div class="summary">            AuDialog events.<br />            Occurs when the internal <a href="https://www.google.com/search?q=site:docs.microsoft.com+TaskDialogCallbackProc" target="_blank">TaskDialogCallbackProc</a> function is called by the task dialog API.
            </div></td></tr></table><a href="#mainBody">Top</a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Remarks</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div>            You can use static functions (less code) or create class instances (more options).<br />            More info: <a href="M_Au_AuDialog_ShowEx.htm">AuDialog.ShowEx</a>.<br /><br />            Uses task dialog API <a href="https://www.google.com/search?q=site:docs.microsoft.com+TaskDialogIndirect" target="_blank">TaskDialogIndirect</a>.<br /><br />            Cannot be used in services. Instead use <b>MessageBox.Show</b> with option ServiceNotification or DefaultDesktopOnly, or API <a href="https://www.google.com/search?q=site:docs.microsoft.com+MessageBox" target="_blank">MessageBox</a> with corresponding flags.
            <div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Examples</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div>
            This example creates a class instance, sets properties, shows dialog, uses events, uses result.
            <div class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EAAABA_copyCode" href="#" class="OH_copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">var</span> d = <span class="highlight-keyword">new</span> AuDialog(); <span class="highlight-comment">//info: another constructor has the same parameters as ShowEx</span>
d.SetText(<span class="highlight-literal">"Main text."</span>, <span class="highlight-literal">"More text.\nSupports &amp;lt;A HREF=\"link data\"&amp;gt;links&amp;lt;/A&amp;gt; if you subscribe to HyperlinkClicked event."</span>);
d.SetButtons(<span class="highlight-literal">"1 OK|2 Cancel|3 Custom|4 Custom2"</span>);
d.SetIcon(DIcon.Warning);
d.SetExpandedText(<span class="highlight-literal">"Expanded info\nand more info."</span>, <span class="highlight-keyword">true</span>);
d.FlagCanBeMinimized = <span class="highlight-keyword">true</span>;
d.SetRadioButtons(<span class="highlight-literal">"1 r1|2 r2"</span>);
d.SetCheckbox(<span class="highlight-literal">"Check"</span>);
d.SetTimeout(<span class="highlight-number">30</span>, <span class="highlight-literal">"OK"</span>);
d.HyperlinkClicked += e =&amp;gt; { AuDialog.Show(<span class="highlight-literal">"link clicked"</span>, e.LinkHref, owner: e.hwnd); };
d.ButtonClicked += e =&amp;gt; { Print(e.Button); <span class="highlight-keyword">if</span>(e.Button == <span class="highlight-number">4</span>) e.DoNotCloseDialog = <span class="highlight-keyword">true</span>; };
d.FlagShowProgressBar = <span class="highlight-keyword">true</span>; d.Timer += e =&amp;gt; { e.dialog.Send.Progress(e.TimerTimeMS / <span class="highlight-number">100</span>); };
<span class="highlight-keyword">var</span> r = d.ShowDialog();
Print(r);
<span class="highlight-keyword">switch</span>(r.Button) { <span class="highlight-keyword">case</span> <span class="highlight-number">1</span>: Print(<span class="highlight-literal">"OK"</span>); <span class="highlight-keyword">break</span>; <span class="highlight-keyword">case</span> DResult.Timeout: Print(<span class="highlight-literal">"timeout"</span>); <span class="highlight-keyword">break</span>; }</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABA");</script><div class="OH_CollapsibleAreaRegion" id="seeAlsoSection"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Au.htm">Au Namespace</a></div></div></div></div></div><div id="OH_footer" class="OH_footer"> </div></body></html>