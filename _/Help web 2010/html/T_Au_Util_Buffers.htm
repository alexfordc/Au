<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { }.OH_footer { }</style><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Buffers Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Buffers class" /><meta name="System.Keywords" content="Au.Util.Buffers class" /><meta name="Microsoft.Help.F1" content="Au.Util.Buffers" /><meta name="Microsoft.Help.Id" content="T:Au.Util.Buffers" /><meta name="Description" content="Allocates memory buffers that can be used with API functions and not only. Can allocate arrays of any value type - char[], byte[] etc." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Au.Util" /><meta name="file" content="T_Au_Util_Buffers" /><meta name="guid" content="T_Au_Util_Buffers" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="OH_outerDiv"><div class="OH_outerContent"><table class="TitleTable"><tr><td class="OH_tdTitleColumn"><h1>Buffers Class</h1></td><td class="OH_tdRunningTitleColumn">Au Class Library</td></tr></table><div id="mainSection"><div id="mainBody"><span class="introStyle"></span> <div class="summary">            Allocates memory buffers that can be used with API functions and not only.<br />            Can allocate arrays of any value type - char[], byte[] etc.</div><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Inheritance Hierarchy</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="LST11350155_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST11350155_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><br />  <span class="selflink">Au.Util<span id="LST11350155_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST11350155_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Buffers</span><br /><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Au_Util.htm">Au.Util</a><br />
    <strong>Assembly:</strong>
   Au (in Au.dll) Version: 1.0.0.0<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><div class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EACA_tabimgleft"> </div><div id="ID0EACA_tab1" class="OH_CodeSnippetContainerTabSolo">C#</div><div class="OH_CodeSnippetContainerTabRightActive" id="ID0EACA_tabimgright"> </div></div><div class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EACA_copyCode" href="#" class="OH_copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EACA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="identifier">Buffers</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACA");</script><p>The <span class="selflink">Buffers</span> type exposes the following members.</p><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Methods</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><table class="members" id="methodList"><tr><th class="ps_iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Util_Buffers_Get__1.htm">Get<span id="LST11350155_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST11350155_2?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST11350155_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST11350155_3?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a></td><td><div class="summary">            Allocates new or gets "cached" array of type T of length n or more.<br />            The returned array is managed by a WeakReference&lt;T[]&gt; variable provided by the caller. Its contents is undefined.</div></td></tr></table><a href="#mainBody">Top</a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Examples</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><div class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EAAABA_copyCode" href="#" class="OH_copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">class</span> Example
{
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> Test()
    {
        Wnd w = Wnd.FindFast(<span class="highlight-keyword">null</span>, <span class="highlight-literal">"Notepad"</span>);
        <span class="highlight-keyword">string</span> s = GetWndText(w);
        Print(s);
    }

    <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">string</span> GetWndText(Wnd w)
    {
        <span class="highlight-keyword">for</span>(<span class="highlight-keyword">int</span> na = <span class="highlight-number">300</span>; ; na *= <span class="highlight-number">2</span>) {
            <span class="highlight-keyword">var</span> b = _GetCharBuffer(<span class="highlight-keyword">ref</span> na);
            <span class="highlight-keyword">int</span> nr = GetWindowText(w, b, na);
            <span class="highlight-keyword">if</span>(nr &lt; na - <span class="highlight-number">1</span>) <span class="highlight-keyword">return</span> (nr &gt; <span class="highlight-number">0</span>) ? b.ToString(nr) : <span class="highlight-literal">""</span>;
        }
    }

    <span class="highlight-comment">//this variable manages the buffer</span>
    [ThreadStatic] <span class="highlight-keyword">static</span> WeakReference&lt;<span class="highlight-keyword">char</span>[]&gt; t_char;

    <span class="highlight-comment">//a helper method</span>
    <span class="highlight-keyword">static</span> Au.Util.Buffers.CharBuffer _GetCharBuffer(<span class="highlight-keyword">ref</span> <span class="highlight-keyword">int</span> n) { <span class="highlight-keyword">var</span> r = Au.Util.Buffers.Get(n, <span class="highlight-keyword">ref</span> t_char); n = r.Length - <span class="highlight-number">1</span>; <span class="highlight-keyword">return</span> r; }

    <span class="highlight-comment">//we'll use this API in this example</span>
    [DllImport(<span class="highlight-literal">"user32.dll"</span>, EntryPoint = <span class="highlight-literal">"GetWindowTextW"</span>)]
    <span class="highlight-keyword">static</span> <span class="highlight-keyword">extern</span> <span class="highlight-keyword">int</span> GetWindowText(Wnd hWnd, [Out] <span class="highlight-keyword">char</span>[] lpString, <span class="highlight-keyword">int</span> nMaxCount);
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABA");</script><div class="OH_CollapsibleAreaRegion" id="seeAlsoSection"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"> </div><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Au_Util.htm">Au.Util Namespace</a></div></div></div></div></div><div id="OH_footer" class="OH_footer"> </div></body></html>