<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Regex_ Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Regex_ class" /><meta name="System.Keywords" content="Au.Regex_ class" /><meta name="System.Keywords" content="Regex_ class, about Regex_ class" /><meta name="Microsoft.Help.F1" content="Au.Regex_" /><meta name="Microsoft.Help.Id" content="T:Au.Regex_" /><meta name="Description" content="PCRE regular expression." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Au" /><meta name="file" content="T_Au_Regex_" /><meta name="guid" content="T_Au_Regex_" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Au Class Library<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="3d4fd35d-4b48-4167-b34f-44e9afc13fc3.htm" title="Au Class Library" tocid="roottoc">Au Class Library</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Au.htm" title="Au" tocid="N_Au">Au</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Au_Regex_.htm" title="Regex_ Class" tocid="T_Au_Regex_">Regex_ Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Au_Regex___ctor.htm" title="Regex_ Constructor " tocid="M_Au_Regex___ctor">Regex_ Constructor </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Properties_T_Au_Regex_.htm" title="Regex_ Properties" tocid="Properties_T_Au_Regex_">Regex_ Properties</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_Au_Regex_.htm" title="Regex_ Methods" tocid="Methods_T_Au_Regex_">Regex_ Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Regex_ Class</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            PCRE regular expression.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="LST4E933289_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4E933289_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><br />  <span class="selflink">Au<span id="LST4E933289_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4E933289_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Regex_</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Au.htm">Au</a><br />
    <strong>Assembly:</strong>
   Au (in Au.dll) Version: 1.0.0.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EACA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EACA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EACA');return false;" title="Copy">Copy</a></div></div><div id="ID1EACA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">Regex_</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EACA");</script></div><p>The <span class="selflink">Regex_</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="constructorList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Au_Regex___ctor.htm">Regex_</a></td><td><div class="summary">
            Compiles regular expression string.<br /><br />
            PCRE regular expression syntax: <a href="https://www.pcre.org/current/doc/html/pcre2pattern.html" target="_blank">full</a>, <a href="https://www.pcre.org/current/doc/html/pcre2syntax.html" target="_blank">short</a>.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="P_Au_Regex__Callout.htm">Callout</a></td><td><div class="summary">
            Sets callout callback function.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID5RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="protected;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_Au_Regex__Finalize.htm">Finalize</a></td><td> (Overrides <a href="http://msdn2.microsoft.com/en-us/library/4k87zsw7" target="_blank">Object<span id="LST4E933289_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4E933289_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Finalize<span id="LST4E933289_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4E933289_3?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Au_Regex__FindAll_1.htm">FindAll(String, RXMore)</a></td><td><div class="summary">
            Finds all match instances of the regular expression.<br />
            Returns a lazy IEnumerable&lt;<a href="T_Au_Types_RXMatch.htm">RXMatch</a>&gt; object that can be used with foreach.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Au_Regex__FindAll.htm">FindAll(String, <span id="LST4E933289_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4E933289_4?cpp=array&lt;");</script>RXMatch<span id="LST4E933289_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4E933289_5?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST4E933289_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4E933289_6?cpp=%");</script>, RXMore)</a></td><td><div class="summary">
            Finds all match instances of the regular expression. Gets array of <a href="T_Au_Types_RXMatch.htm">RXMatch</a>
.<br />
            Returns true if found 1 or more matches.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Au_Regex__FindAllG_1.htm">FindAllG(String, Int32, RXMore)</a></td><td><div class="summary">
            Finds all match instances of the regular expression.<br />
            Returns a lazy IEnumerable&lt;<a href="T_Au_Types_RXGroup.htm">RXGroup</a>&gt; object that can be used with foreach.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Au_Regex__FindAllG.htm">FindAllG(String, <span id="LST4E933289_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4E933289_7?cpp=array&lt;");</script>RXGroup<span id="LST4E933289_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4E933289_8?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST4E933289_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4E933289_9?cpp=%");</script>, Int32, RXMore)</a></td><td><div class="summary">
            Finds all match instances of the regular expression. Gets array of <a href="T_Au_Types_RXGroup.htm">RXGroup</a>
 (index, length, value).<br />
            Returns true if found 1 or more matches.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Au_Regex__FindAllS.htm">FindAllS(String, Int32, RXMore)</a></td><td><div class="summary">
            Finds all match instances of the regular expression.<br />
            Returns a lazy IEnumerable&lt;string&gt; object that can be used with foreach.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Au_Regex__FindAllS_1.htm">FindAllS(String, <span id="LST4E933289_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4E933289_10?cpp=array&lt;");</script>String<span id="LST4E933289_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4E933289_11?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST4E933289_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4E933289_12?cpp=%");</script>, Int32, RXMore)</a></td><td><div class="summary">
            Finds all match instances of the regular expression. Gets array of strings.<br />
            Returns true if found 1 or more matches.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Au_Regex__GroupNumberFromName.htm">GroupNumberFromName</a></td><td><div class="summary">
            Finds a named group and returns its 1-based index.<br />
            Returns -1 if not found.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Au_Regex__IsMatch.htm">IsMatch</a></td><td><div class="summary">
            Returns true if string <span class="parameter">s</span> matches this regular expression.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Au_Regex__Match.htm">Match</a></td><td><div class="summary">
            Returns true if string <span class="parameter">s</span>
 matches this regular expression.<br />
            Gets match info as <a href="T_Au_Types_RXMatch.htm">RXMatch</a>.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Au_Regex__MatchG.htm">MatchG</a></td><td><div class="summary">
            Returns true if string <span class="parameter">s</span>
 matches this regular expression.<br />
            Gets whole match or some group, as <a href="T_Au_Types_RXGroup.htm">RXGroup</a> (index, length, value).
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Au_Regex__MatchS.htm">MatchS</a></td><td><div class="summary">
            Returns true if string <span class="parameter">s</span>
 matches this regular expression.<br />
            Gets whole match or some group, as string.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Au_Regex__Replace.htm">Replace(String, Func<span id="LST4E933289_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4E933289_13?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>RXMatch, String<span id="LST4E933289_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4E933289_14?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, RXMore)</a></td><td><div class="summary">
            Finds and replaces all match instances of the regular expression. Uses a callback function.<br />
            Returns the result string.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Au_Regex__Replace_2.htm">Replace(String, String, Int32, RXMore)</a></td><td><div class="summary">
            Finds and replaces all match instances of the regular expression.<br />
            Returns the result string.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Au_Regex__Replace_1.htm">Replace(String, Func<span id="LST4E933289_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4E933289_15?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>RXMatch, String<span id="LST4E933289_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4E933289_16?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, String<span id="LST4E933289_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4E933289_17?cpp=%");</script>, Int32, RXMore)</a></td><td><div class="summary">
            Finds and replaces all match instances of the regular expression. Uses a callback function.<br />
            Returns the number of replacements made. Returns the result string through an out parameter.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Au_Regex__Replace_3.htm">Replace(String, String, String<span id="LST4E933289_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4E933289_18?cpp=%");</script>, Int32, RXMore)</a></td><td><div class="summary">
            Finds and replaces all match instances of the regular expression.<br />
            Returns the number of replacements made. Returns the result string through an out parameter.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Au_Regex__Split.htm">Split</a></td><td><div class="summary">
            Returns array of substrings delimited by regular expression matches.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Au_Regex__SplitG.htm">SplitG</a></td><td><div class="summary">
            Returns <a href="T_Au_Types_RXGroup.htm">RXGroup</a> array of substrings delimited by regular expression matches.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID6RBSection" class="collapsibleSection"><p>PCRE is a regular expression library: <a href="https://www.pcre.org/" target="_blank">https://www.pcre.org/</a>.</p><p>PCRE regular expression syntax: <a href="https://www.pcre.org/current/doc/html/pcre2pattern.html" target="_blank">full</a>, <a href="https://www.pcre.org/current/doc/html/pcre2syntax.html" target="_blank">short</a>.</p><p>Recommended website: <a href="http://www.rexegg.com/" target="_blank">http://www.rexegg.com/</a>.</p><p>This class is an alternative to the .NET <a href="http://msdn2.microsoft.com/en-us/library/6f7hht7k" target="_blank">Regex</a> class. The regular expression syntax is similar. PCRE has some features unavailable in .NET, and vice versa. In most cases PCRE is about 2 times faster. You can use any of these classes. Functions of <a href="T_Au_Acc.htm">Acc</a> class support only PCRE.</p><p>Terms used in this documentation and in names of functions and types: </p><ul><li><strong>regular expression</strong> - Regular expression string. Also known as <i>pattern</i>.</li><li><strong>subject string</strong> - The string in which to search for the regular expression. Also known as <i>input string</i>.</li><li><strong>match</strong> - The part (substring) of the subject string that matches the regular expression.</li><li><strong>group</strong> - Regular expression part enclosed in (). Except non-capturing parts, like (?:...) and (?options). Also known as <i>capturing group</i>, <i>capturing subpattern</i>. Often term <i>group</i> also is used for group matches.</li><li><strong>group match</strong> - The part (substring) of the subject string that matches the group. Also known as <i>captured substring</i>.</li></ul>
             This library uses an unmanaged code dll AuCpp.dll that contains PCRE code. This class is a managed wrapper for it. The main PCRE API functions used by this class are <a href="https://www.pcre.org/current/doc/html/pcre2api.html" target="_blank">pcre2_compile and pcre2_match</a>. The Regex_ constructor calls pcre2_compile and stores the compiled code in the variable. Other Regex_ functions call pcre2_match. Compiling to native code (JIT) is not supported. A Regex_ variable can be used by multiple threads simultaneously. Also there are several String extension methods that use this class. The string variable is the subject string. These methods create and use cached Regex_ instances for speed. The Regex_ constructor does not use caching.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID7RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EACABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EACABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EACABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">var</span> s = <span class="highlight-literal">"one two22, three333,four"</span>; <span class="highlight-comment">//subject string</span>
<span class="highlight-keyword">var</span> x = <span class="highlight-keyword">new</span> Regex_(<span class="highlight-literal">@"\b(\w+?)(\d+)\b"</span>); <span class="highlight-comment">//regular expression</span>

 Print(<span class="highlight-literal">"//IsMatch:"</span>);
Print(x.IsMatch(s));

 Print(<span class="highlight-literal">"//Match:"</span>);
<span class="highlight-keyword">if</span>(x.Match(s, <span class="highlight-keyword">out</span> <span class="highlight-keyword">var</span> m)) Print(m.Value, m[<span class="highlight-number">1</span>].Value, m[<span class="highlight-number">2</span>].Value);

 Print(<span class="highlight-literal">"//FindAll with foreach:"</span>);
<span class="highlight-keyword">foreach</span>(<span class="highlight-keyword">var</span> v <span class="highlight-keyword">in</span> x.FindAll(s)) Print(v.Value, v[<span class="highlight-number">1</span>].Value, v[<span class="highlight-number">2</span>].Value);
 Print(<span class="highlight-literal">"//FindAllS, get only strings of group 2:"</span>);
Print(x.FindAllS(s, <span class="highlight-number">2</span>));

 Print(<span class="highlight-literal">"//Replace:"</span>);
Print(x.Replace(s, <span class="highlight-literal">"'$2$1'"</span>));
 Print(<span class="highlight-literal">"//Replace with callback:"</span>);
Print(x.Replace(s, o =&gt; o.Value.ToUpper_()));
 Print(<span class="highlight-literal">"//Replace with callback and ExpandReplacement:"</span>);
Print(x.Replace(s, o =&gt; { <span class="highlight-keyword">if</span>(o.Length &gt; <span class="highlight-number">5</span>) <span class="highlight-keyword">return</span> o.ExpandReplacement(<span class="highlight-literal">"'$2$1'"</span>); <span class="highlight-keyword">else</span> <span class="highlight-keyword">return</span> o[<span class="highlight-number">1</span>].Value; }));

 Print(<span class="highlight-literal">"//Split:"</span>);
Print(<span class="highlight-keyword">new</span> Regex_(<span class="highlight-literal">@" *, *"</span>).Split(s));</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EACABA");</script>
             Examples with String extension methods. 
            <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">var</span> s = <span class="highlight-literal">"one two22, three333,four"</span>; <span class="highlight-comment">//subject string</span>
<span class="highlight-keyword">var</span> rx = <span class="highlight-literal">@"\b(\w+?)(\d+)\b"</span>; <span class="highlight-comment">//regular expression</span>

 Print(<span class="highlight-literal">"//RegexIsMatch_:"</span>);
Print(s.RegexIsMatch_(rx));

 Print(<span class="highlight-literal">"//RegexMatch_:"</span>);
<span class="highlight-keyword">if</span>(s.RegexMatch_(rx, <span class="highlight-keyword">out</span> <span class="highlight-keyword">var</span> m)) Print(m.Value, m[<span class="highlight-number">1</span>].Value, m[<span class="highlight-number">2</span>].Value);

 Print(<span class="highlight-literal">"//RegexMatch_, get only string:"</span>);
<span class="highlight-keyword">if</span>(s.RegexMatch_(rx, <span class="highlight-number">0</span>, <span class="highlight-keyword">out</span> <span class="highlight-keyword">var</span> s0)) Print(s0);
 Print(<span class="highlight-literal">"//RegexMatch_, get only string of group 1:"</span>);
<span class="highlight-keyword">if</span>(s.RegexMatch_(rx, <span class="highlight-number">1</span>, <span class="highlight-keyword">out</span> <span class="highlight-keyword">var</span> s1)) Print(s1);

 Print(<span class="highlight-literal">"//RegexFindAll_ with foreach:"</span>);
<span class="highlight-keyword">foreach</span>(<span class="highlight-keyword">var</span> v <span class="highlight-keyword">in</span> s.RegexFindAll_(rx)) Print(v.Value, v[<span class="highlight-number">1</span>].Value, v[<span class="highlight-number">2</span>].Value);

 Print(<span class="highlight-literal">"//RegexFindAll_ with foreach, get only strings:"</span>);
<span class="highlight-keyword">foreach</span>(<span class="highlight-keyword">var</span> v <span class="highlight-keyword">in</span> s.RegexFindAll_(rx, <span class="highlight-number">0</span>)) Print(v);
 Print(<span class="highlight-literal">"//RegexFindAll_ with foreach, get only strings of group 2:"</span>);
<span class="highlight-keyword">foreach</span>(<span class="highlight-keyword">var</span> v <span class="highlight-keyword">in</span> s.RegexFindAll_(rx, <span class="highlight-number">2</span>)) Print(v);

 Print(<span class="highlight-literal">"//RegexFindAll_, get array:"</span>);
<span class="highlight-keyword">if</span>(s.RegexFindAll_(rx, <span class="highlight-keyword">out</span> <span class="highlight-keyword">var</span> am)) <span class="highlight-keyword">foreach</span>(<span class="highlight-keyword">var</span> k <span class="highlight-keyword">in</span> am) Print(k.Value, k[<span class="highlight-number">1</span>].Value, k[<span class="highlight-number">2</span>].Value);

 Print(<span class="highlight-literal">"//RegexFindAll_, get array of strings:"</span>);
<span class="highlight-keyword">if</span>(s.RegexFindAll_(rx, <span class="highlight-number">0</span>, <span class="highlight-keyword">out</span> <span class="highlight-keyword">var</span> av)) Print(av);
 Print(<span class="highlight-literal">"//RegexFindAll_, get array of group 2 strings:"</span>);
<span class="highlight-keyword">if</span>(s.RegexFindAll_(rx, <span class="highlight-number">2</span>, <span class="highlight-keyword">out</span> <span class="highlight-keyword">var</span> ag)) Print(ag);

 Print(<span class="highlight-literal">"//RegexReplace_:"</span>);
Print(s.RegexReplace_(rx, <span class="highlight-literal">"'$2$1'"</span>));

 Print(<span class="highlight-literal">"//RegexReplace_ with callback:"</span>);
Print(s.RegexReplace_(rx, o =&gt; o.Value.ToUpper_()));
 Print(<span class="highlight-literal">"//RegexReplace_ with callback and ExpandReplacement:"</span>);
Print(s.RegexReplace_(rx, o =&gt; { <span class="highlight-keyword">if</span>(o.Length &gt; <span class="highlight-number">5</span>) <span class="highlight-keyword">return</span> o.ExpandReplacement(<span class="highlight-literal">"'$2$1'"</span>); <span class="highlight-keyword">else</span> <span class="highlight-keyword">return</span> o[<span class="highlight-number">1</span>].Value; }));

 Print(<span class="highlight-literal">"//RegexReplace_, get replacement count:"</span>);
<span class="highlight-keyword">if</span>(<span class="highlight-number">0</span> != s.RegexReplace_(rx, <span class="highlight-literal">"'$2$1'"</span>, <span class="highlight-keyword">out</span> <span class="highlight-keyword">var</span> s2)) Print(s2);

 Print(<span class="highlight-literal">"//RegexReplace_ with callback, get replacement count:"</span>);
<span class="highlight-keyword">if</span>(<span class="highlight-number">0</span> != s.RegexReplace_(rx, o =&gt; o.Value.ToUpper_(), <span class="highlight-keyword">out</span> <span class="highlight-keyword">var</span> s3)) Print(s3);

 Print(<span class="highlight-literal">"//RegexSplit_:"</span>);
Print(s.RegexSplit_(<span class="highlight-literal">@" *, *"</span>));</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID8RB')" onkeypress="SectionExpandCollapse_CheckKey('ID8RB', event)" tabindex="0"><img id="ID8RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID8RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Au.htm">Au Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"> </div></body></html>