<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>WaitFor Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="WaitFor class" /><meta name="System.Keywords" content="Au.WaitFor class" /><meta name="System.Keywords" content="WaitFor class, about WaitFor class" /><meta name="Microsoft.Help.F1" content="Au.WaitFor" /><meta name="Microsoft.Help.Id" content="T:Au.WaitFor" /><meta name="Description" content="Contains functions to wait for a condition, such as 'window exists'." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Au" /><meta name="file" content="T_Au_WaitFor" /><meta name="guid" content="T_Au_WaitFor" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Au Class Library<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="3d4fd35d-4b48-4167-b34f-44e9afc13fc3.htm" title="Au Class Library" tocid="roottoc">Au Class Library</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Au.htm" title="Au" tocid="N_Au">Au</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Au_WaitFor.htm" title="WaitFor Class" tocid="T_Au_WaitFor">WaitFor Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_Au_WaitFor.htm" title="WaitFor Methods" tocid="Methods_T_Au_WaitFor">WaitFor Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>WaitFor Class</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Contains functions to wait for a condition, such as 'window exists'.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="LSTA7039474_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA7039474_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><br />  <span class="selflink">Au<span id="LSTA7039474_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA7039474_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>WaitFor</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Au.htm">Au</a><br />
    <strong>Assembly:</strong>
   Au (in Au.dll) Version: 1.0.0.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EACA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EACA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EACA');return false;" title="Copy">Copy</a></div></div><div id="ID1EACA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="identifier">WaitFor</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EACA");</script></div><p>The <span class="selflink">WaitFor</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_WaitFor_Condition.htm">Condition</a></td><td><div class="summary">
            Waits for an user-defined condition.<br />
            Returns true. On timeout returns false if <span class="parameter">secondsTimeout</span> is negative; else exception.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_WaitFor_NoModifierKeys.htm">NoModifierKeys</a></td><td><div class="summary">
            Waits while some modifier keys (Ctrl, Shift, Alt, Win) are in pressed state.<br />
            Returns true. On timeout returns false if <span class="parameter">secondsTimeout</span> is negative; else exception.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_WaitFor_NoModifierKeysAndMouseButtons.htm">NoModifierKeysAndMouseButtons</a></td><td><div class="summary">
            Waits while some modifier keys (Ctrl, Shift, Alt, Win) or mouse buttons are in pressed state.<br />
            Returns true. On timeout returns false if <span class="parameter">secondsTimeout</span> is negative; else exception.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_WaitFor_NoMouseButtons.htm">NoMouseButtons</a></td><td><div class="summary">
            Waits while some mouse buttons are in pressed state.<br />
            Returns true. On timeout returns false if <span class="parameter">secondsTimeout</span> is negative; else exception.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_WaitFor_WindowActive.htm">WindowActive(Wnd, Double, Boolean)</a></td><td><div class="summary">
            Waits until the window is the active window. Or the opposite, if <span class="parameter">not</span>
 is true.<br />
            Returns true. On timeout returns false if <span class="parameter">secondsTimeout</span>
 is negative; else exception.<br />
            Uses <a href="P_Au_Wnd_IsActive.htm">IsActive</a>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_WaitFor_WindowActive_1.htm">WindowActive(Wnd<span id="LSTA7039474_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA7039474_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Finder, Double, Boolean)</a></td><td><div class="summary">
            The same as <a href="M_Au_WaitFor_WindowActive_2.htm">WindowActive(Double, String, String, String, WFFlags, Func<span id="LSTA7039474_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA7039474_3?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Wnd, Boolean<span id="LSTA7039474_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA7039474_4?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Object, Boolean)</a>, just arguments are passed differently.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Au_WaitFor_WindowActive_2.htm">WindowActive(Double, String, String, String, WFFlags, Func<span id="LSTA7039474_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA7039474_5?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Wnd, Boolean<span id="LSTA7039474_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA7039474_6?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Object, Boolean)</a></td><td><div class="summary">
             Waits until window exists and is the active window. Or the opposite, if <span class="parameter">not</span>
 is true.<br />
             Returns window handle. On timeout returns default(Wnd) if <span class="parameter">secondsTimeout</span>
 is negative; else exception.<br />
             All undocumented parameters etc are the same as <a href="M_Au_Wnd_Find.htm">Find(String, String, String, WFFlags, Func<span id="LSTA7039474_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA7039474_7?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Wnd, Boolean<span id="LSTA7039474_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA7039474_8?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Object)</a>
.<br />
             If you have a window's Wnd, use <a href="M_Au_WaitFor_WindowActive.htm">WindowActive(Wnd, Double, Boolean)</a> instead.
             </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Au_WaitFor_WindowChildExists.htm">WindowChildExists</a></td><td><div class="summary">
            Waits until control (child window) exists in the window. Or the opposite, if <span class="parameter">not</span>
 is true.<br />
            Returns the control. On timeout returns default(Wnd) if <span class="parameter">secondsTimeout</span>
 is negative; else exception.<br />
            Uses <a href="P_Au_Wnd_IsEnabled.htm">IsEnabled</a>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_WaitFor_WindowClosed.htm">WindowClosed</a></td><td><div class="summary">
            Waits until the window handle is invalid.<br />
            Returns true. On timeout returns false if <span class="parameter">secondsTimeout</span>
 is negative; else exception.<br />
            Uses <a href="P_Au_Wnd_IsAlive.htm">IsAlive</a>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Au_WaitFor_WindowCondition.htm">WindowCondition</a></td><td><div class="summary">
            Waits for an user-defined condition of an existing window.<br />
            Returns true. On timeout returns false if <span class="parameter">secondsTimeout</span> is negative; else exception.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_WaitFor_WindowEnabled.htm">WindowEnabled</a></td><td><div class="summary">
            Waits until the window is enabled (not disabled). Or the opposite, if <span class="parameter">not</span>
 is true.<br />
            Returns true. On timeout returns false if <span class="parameter">secondsTimeout</span>
 is negative; else exception.<br />
            Uses <a href="P_Au_Wnd_IsEnabled.htm">IsEnabled</a>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_WaitFor_WindowExists.htm">WindowExists(Wnd<span id="LSTA7039474_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA7039474_9?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Finder, Double, Boolean)</a></td><td><div class="summary">
            The same as <a href="M_Au_WaitFor_WindowExists_1.htm">WindowExists(Double, String, String, String, WFFlags, Func<span id="LSTA7039474_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA7039474_10?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Wnd, Boolean<span id="LSTA7039474_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA7039474_11?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Object, Boolean)</a>, just arguments are passed differently.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Au_WaitFor_WindowExists_1.htm">WindowExists(Double, String, String, String, WFFlags, Func<span id="LSTA7039474_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA7039474_12?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Wnd, Boolean<span id="LSTA7039474_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA7039474_13?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Object, Boolean)</a></td><td><div class="summary">
            Waits until window exists and (optionally) is visible. Or the opposite, if <span class="parameter">not</span>
 is true.<br />
            Returns window handle. On timeout returns default(Wnd) if <span class="parameter">secondsTimeout</span>
 is negative; else exception.<br />
            All undocumented parameters etc are the same as <a href="M_Au_Wnd_Find.htm">Find(String, String, String, WFFlags, Func<span id="LSTA7039474_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA7039474_14?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Wnd, Boolean<span id="LSTA7039474_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA7039474_15?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Object)</a>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_WaitFor_WindowVisible.htm">WindowVisible</a></td><td><div class="summary">
            Waits until the window is visible. Or the opposite, if <span class="parameter">not</span>
 is true.<br />
            Returns true. On timeout returns false if <span class="parameter">secondsTimeout</span>
 is negative; else exception.<br />
            Uses <a href="P_Au_Wnd_IsVisibleEx.htm">IsVisibleEx</a>
.<br />
            For 'exists and is visible' use <a href="M_Au_WaitFor_WindowExists_1.htm">WindowExists(Double, String, String, String, WFFlags, Func<span id="LSTA7039474_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA7039474_16?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Wnd, Boolean<span id="LSTA7039474_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA7039474_17?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Object, Boolean)</a>. With default flags it waits for visible window and ignores invisible windows.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID4RBSection" class="collapsibleSection">
            All functions have a <i>secondsTimeout</i> parameter. It is the maximal time to wait, seconds. If it is 0, waits indefinitely. If &gt;0, after that time interval throws <a href="http://msdn2.microsoft.com/en-us/library/cke1faa2" target="_blank">TimeoutException</a>
. If &lt;0, after that time interval stops waiting and returns default value (false, default(Wnd), etc).<br /><br />
            While waiting, messages and events are not processed. For example, if used in a Form/Control event handler, the form would stop responding. Then need to use another thread, for example async/await/Task, like in the example.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID5RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EACABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EACABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EACABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">Wnd w = WaitFor.WindowExists(<span class="highlight-number">10</span>, <span class="highlight-literal">"* Notepad"</span>);
Print(w);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EACABA");</script>
            Using in a Form/Control event handler.
            <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">var</span> f = <span class="highlight-keyword">new</span> Form();
f.Click += <span class="highlight-keyword">async</span> (unu, sed) =&gt;
  {
      Print(<span class="highlight-literal">"waiting for Notepad..."</span>);
      Wnd w = <span class="highlight-keyword">await</span> Task.Run(() =&gt; WaitFor.WindowExists(<span class="highlight-number">-10</span>, <span class="highlight-literal">"* Notepad"</span>));
      <span class="highlight-keyword">if</span>(w.Is0) Print(<span class="highlight-literal">"timeout"</span>); <span class="highlight-keyword">else</span> Print(w);
  };
f.ShowDialog();</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID6RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Au.htm">Au Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"> </div></body></html>