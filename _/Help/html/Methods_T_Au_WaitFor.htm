<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>WaitFor Methods</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="WaitFor class, methods" /><meta name="Microsoft.Help.Id" content="Methods.T:Au.WaitFor" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Au" /><meta name="file" content="Methods_T_Au_WaitFor" /><meta name="guid" content="Methods_T_Au_WaitFor" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Au Class Library<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="3d4fd35d-4b48-4167-b34f-44e9afc13fc3.htm" title="Au Class Library" tocid="roottoc">Au Class Library</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Au.htm" title="Au" tocid="N_Au">Au</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Au_WaitFor.htm" title="WaitFor Class" tocid="T_Au_WaitFor">WaitFor Class</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_Au_WaitFor.htm" title="WaitFor Methods" tocid="Methods_T_Au_WaitFor">WaitFor Methods</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Au_WaitFor_Condition.htm" title="Condition Method " tocid="M_Au_WaitFor_Condition">Condition Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Au_WaitFor_NoModifierKeys.htm" title="NoModifierKeys Method " tocid="M_Au_WaitFor_NoModifierKeys">NoModifierKeys Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Au_WaitFor_NoModifierKeysAndMouseButtons.htm" title="NoModifierKeysAndMouseButtons Method " tocid="M_Au_WaitFor_NoModifierKeysAndMouseButtons">NoModifierKeysAndMouseButtons Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Au_WaitFor_NoMouseButtons.htm" title="NoMouseButtons Method " tocid="M_Au_WaitFor_NoMouseButtons">NoMouseButtons Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Au_WaitFor_WindowActive.htm" title="WindowActive Method " tocid="Overload_Au_WaitFor_WindowActive">WindowActive Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Au_WaitFor_WindowChildExists.htm" title="WindowChildExists Method " tocid="M_Au_WaitFor_WindowChildExists">WindowChildExists Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Au_WaitFor_WindowClosed.htm" title="WindowClosed Method " tocid="M_Au_WaitFor_WindowClosed">WindowClosed Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Au_WaitFor_WindowCondition.htm" title="WindowCondition Method " tocid="M_Au_WaitFor_WindowCondition">WindowCondition Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Au_WaitFor_WindowEnabled.htm" title="WindowEnabled Method " tocid="M_Au_WaitFor_WindowEnabled">WindowEnabled Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Au_WaitFor_WindowExists.htm" title="WindowExists Method " tocid="Overload_Au_WaitFor_WindowExists">WindowExists Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Au_WaitFor_WindowVisible.htm" title="WindowVisible Method " tocid="M_Au_WaitFor_WindowVisible">WindowVisible Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>WaitFor Methods</h1></td></tr></table><span class="introStyle"></span> <p>The <a href="T_Au_WaitFor.htm">WaitFor</a> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID0RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_WaitFor_Condition.htm">Condition</a></td><td><div class="summary">
            Waits for an user-defined condition.<br />
            Returns true. On timeout returns false if <span class="parameter">secondsTimeout</span> is negative; else exception.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_WaitFor_NoModifierKeys.htm">NoModifierKeys</a></td><td><div class="summary">
            Waits while some modifier keys (Ctrl, Shift, Alt, Win) are in pressed state.<br />
            Returns true. On timeout returns false if <span class="parameter">secondsTimeout</span> is negative; else exception.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_WaitFor_NoModifierKeysAndMouseButtons.htm">NoModifierKeysAndMouseButtons</a></td><td><div class="summary">
            Waits while some modifier keys (Ctrl, Shift, Alt, Win) or mouse buttons are in pressed state.<br />
            Returns true. On timeout returns false if <span class="parameter">secondsTimeout</span> is negative; else exception.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_WaitFor_NoMouseButtons.htm">NoMouseButtons</a></td><td><div class="summary">
            Waits while some mouse buttons are in pressed state.<br />
            Returns true. On timeout returns false if <span class="parameter">secondsTimeout</span> is negative; else exception.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_WaitFor_WindowActive.htm">WindowActive(Wnd, Double, Boolean)</a></td><td><div class="summary">
            Waits until the window is the active window. Or the opposite, if <span class="parameter">not</span>
 is true.<br />
            Returns true. On timeout returns false if <span class="parameter">secondsTimeout</span>
 is negative; else exception.<br />
            Uses <a href="P_Au_Wnd_IsActive.htm">IsActive</a>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_WaitFor_WindowActive_1.htm">WindowActive(Wnd<span id="LST8387ECCB_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8387ECCB_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Finder, Double, Boolean)</a></td><td><div class="summary">
            The same as <a href="M_Au_WaitFor_WindowActive_2.htm">WindowActive(Double, String, String, String, WFFlags, Func<span id="LST8387ECCB_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8387ECCB_1?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Wnd, Boolean<span id="LST8387ECCB_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8387ECCB_2?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Object, Boolean)</a>, just arguments are passed differently.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Au_WaitFor_WindowActive_2.htm">WindowActive(Double, String, String, String, WFFlags, Func<span id="LST8387ECCB_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8387ECCB_3?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Wnd, Boolean<span id="LST8387ECCB_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8387ECCB_4?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Object, Boolean)</a></td><td><div class="summary">
             Waits until window exists and is the active window. Or the opposite, if <span class="parameter">not</span>
 is true.<br />
             Returns window handle. On timeout returns default(Wnd) if <span class="parameter">secondsTimeout</span>
 is negative; else exception.<br />
             All undocumented parameters etc are the same as <a href="M_Au_Wnd_Find.htm">Find(String, String, String, WFFlags, Func<span id="LST8387ECCB_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8387ECCB_5?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Wnd, Boolean<span id="LST8387ECCB_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8387ECCB_6?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Object)</a>
.<br />
             If you have a window's Wnd, use <a href="M_Au_WaitFor_WindowActive.htm">WindowActive(Wnd, Double, Boolean)</a> instead.
             </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Au_WaitFor_WindowChildExists.htm">WindowChildExists</a></td><td><div class="summary">
            Waits until control (child window) exists in the window. Or the opposite, if <span class="parameter">not</span>
 is true.<br />
            Returns the control. On timeout returns default(Wnd) if <span class="parameter">secondsTimeout</span>
 is negative; else exception.<br />
            Uses <a href="P_Au_Wnd_IsEnabled.htm">IsEnabled</a>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_WaitFor_WindowClosed.htm">WindowClosed</a></td><td><div class="summary">
            Waits until the window handle is invalid.<br />
            Returns true. On timeout returns false if <span class="parameter">secondsTimeout</span>
 is negative; else exception.<br />
            Uses <a href="P_Au_Wnd_IsAlive.htm">IsAlive</a>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Au_WaitFor_WindowCondition.htm">WindowCondition</a></td><td><div class="summary">
            Waits for an user-defined condition of an existing window.<br />
            Returns true. On timeout returns false if <span class="parameter">secondsTimeout</span> is negative; else exception.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_WaitFor_WindowEnabled.htm">WindowEnabled</a></td><td><div class="summary">
            Waits until the window is enabled (not disabled). Or the opposite, if <span class="parameter">not</span>
 is true.<br />
            Returns true. On timeout returns false if <span class="parameter">secondsTimeout</span>
 is negative; else exception.<br />
            Uses <a href="P_Au_Wnd_IsEnabled.htm">IsEnabled</a>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_WaitFor_WindowExists.htm">WindowExists(Wnd<span id="LST8387ECCB_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8387ECCB_7?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Finder, Double, Boolean)</a></td><td><div class="summary">
            The same as <a href="M_Au_WaitFor_WindowExists_1.htm">WindowExists(Double, String, String, String, WFFlags, Func<span id="LST8387ECCB_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8387ECCB_8?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Wnd, Boolean<span id="LST8387ECCB_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8387ECCB_9?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Object, Boolean)</a>, just arguments are passed differently.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Au_WaitFor_WindowExists_1.htm">WindowExists(Double, String, String, String, WFFlags, Func<span id="LST8387ECCB_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8387ECCB_10?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Wnd, Boolean<span id="LST8387ECCB_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8387ECCB_11?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Object, Boolean)</a></td><td><div class="summary">
            Waits until window exists and (optionally) is visible. Or the opposite, if <span class="parameter">not</span>
 is true.<br />
            Returns window handle. On timeout returns default(Wnd) if <span class="parameter">secondsTimeout</span>
 is negative; else exception.<br />
            All undocumented parameters etc are the same as <a href="M_Au_Wnd_Find.htm">Find(String, String, String, WFFlags, Func<span id="LST8387ECCB_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8387ECCB_12?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Wnd, Boolean<span id="LST8387ECCB_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8387ECCB_13?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Object)</a>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_WaitFor_WindowVisible.htm">WindowVisible</a></td><td><div class="summary">
            Waits until the window is visible. Or the opposite, if <span class="parameter">not</span>
 is true.<br />
            Returns true. On timeout returns false if <span class="parameter">secondsTimeout</span>
 is negative; else exception.<br />
            Uses <a href="P_Au_Wnd_IsVisibleEx.htm">IsVisibleEx</a>
.<br />
            For 'exists and is visible' use <a href="M_Au_WaitFor_WindowExists_1.htm">WindowExists(Double, String, String, String, WFFlags, Func<span id="LST8387ECCB_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8387ECCB_14?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Wnd, Boolean<span id="LST8387ECCB_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8387ECCB_15?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Object, Boolean)</a>. With default flags it waits for visible window and ignores invisible windows.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID1RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Au_WaitFor.htm">WaitFor Class</a></div><div class="seeAlsoStyle"><a href="N_Au.htm">Au Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"> </div></body></html>