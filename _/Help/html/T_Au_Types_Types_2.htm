<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Types(T1, T2) Structure</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Types%3CT1%2C T2%3E structure" /><meta name="System.Keywords" content="Au.Types.Types%3CT1%2C T2%3E structure" /><meta name="System.Keywords" content="Types%3CT1%2C T2%3E structure, about Types%3CT1%2C T2%3E structure" /><meta name="System.Keywords" content="Types(Of T1%2C T2) structure" /><meta name="System.Keywords" content="Au.Types.Types(Of T1%2C T2) structure" /><meta name="System.Keywords" content="Types(Of T1%2C T2) structure, about Types(Of T1%2C T2) structure" /><meta name="Microsoft.Help.F1" content="Au.Types.Types`2" /><meta name="Microsoft.Help.Id" content="T:Au.Types.Types`2" /><meta name="Description" content="Used for method parameters that accept one of two types." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Au.Types" /><meta name="file" content="T_Au_Types_Types_2" /><meta name="guid" content="T_Au_Types_Types_2" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Au Class Library<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="3d4fd35d-4b48-4167-b34f-44e9afc13fc3.htm" title="Au Class Library" tocid="roottoc">Au Class Library</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Au_Types.htm" title="Au.Types" tocid="N_Au_Types">Au.Types</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Au_Types_Types_2.htm" title="Types(T1, T2) Structure" tocid="T_Au_Types_Types_2">Types(T1, T2) Structure</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Operators_T_Au_Types_Types_2.htm" title="Types(T1, T2) Type Conversions" tocid="Operators_T_Au_Types_Types_2">Types(T1, T2) Type Conversions</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Fields_T_Au_Types_Types_2.htm" title="Types(T1, T2) Fields" tocid="Fields_T_Au_Types_Types_2">Types(T1, T2) Fields</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Types<span id="LSTB711787F_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB711787F_0?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="typeparameter">T1</span>, <span class="typeparameter">T2</span><span id="LSTB711787F_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB711787F_1?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script> Structure</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Used for method parameters that accept one of two types.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Au_Types.htm">Au.Types</a><br />
    <strong>Assembly:</strong>
   Au (in Au.dll) Version: 1.0.0.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EACA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">struct</span> <span class="identifier">Types</span>&lt;T1, T2&gt;
</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACA");</script><h4 class="subHeading">Type Parameters</h4><dl><dt><span class="parameter">T1</span></dt><dd /><dt><span class="parameter">T2</span></dt><dd /></dl></div><p>The <span class="selflink">Types<span id="LSTB711787F_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB711787F_2?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T1, T2<span id="LSTB711787F_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB711787F_3?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Operators</span></div><div id="ID2RBSection" class="collapsibleSection"><table class="members" id="operatorList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/puboperator.gif" alt="Public operator" title="Public operator" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Types_Types_2_op_Implicit_2.htm"><span id="LSTB711787F_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB711787F_4?cs=Implicit|vb=Widening|cpp=Implicit|nu=Implicit|fs=Implicit");</script>(T1 to Types<span id="LSTB711787F_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB711787F_5?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T1, T2<span id="LSTB711787F_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB711787F_6?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary"> Assignment of a value of type T1. </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/puboperator.gif" alt="Public operator" title="Public operator" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Types_Types_2_op_Implicit_3.htm"><span id="LSTB711787F_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB711787F_7?cs=Implicit|vb=Widening|cpp=Implicit|nu=Implicit|fs=Implicit");</script>(T2 to Types<span id="LSTB711787F_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB711787F_8?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T1, T2<span id="LSTB711787F_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB711787F_9?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary"> Assignment of a value of type T2. </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/puboperator.gif" alt="Public operator" title="Public operator" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Types_Types_2_op_Implicit.htm"><span id="LSTB711787F_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB711787F_10?cs=Implicit|vb=Widening|cpp=Implicit|nu=Implicit|fs=Implicit");</script>(JustNull to Types<span id="LSTB711787F_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB711787F_11?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T1, T2<span id="LSTB711787F_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB711787F_12?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">Infrastructure.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/puboperator.gif" alt="Public operator" title="Public operator" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Au_Types_Types_2_op_Implicit_1.htm"><span id="LSTB711787F_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB711787F_13?cs=Implicit|vb=Widening|cpp=Implicit|nu=Implicit|fs=Implicit");</script>(JustNull2 to Types<span id="LSTB711787F_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB711787F_14?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T1, T2<span id="LSTB711787F_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB711787F_15?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">Infrastructure.</div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Fields</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="fieldList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_Au_Types_Types_2_type.htm">type</a></td><td><div class="summary"> Value type. 1 if T1 (v1 is valid), 2 if T2 (v2 is valid), 0 if unassigned. </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_Au_Types_Types_2_v1.htm">v1</a></td><td><div class="summary"> Value of type T1. Valid when type is 1. </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_Au_Types_Types_2_v2.htm">v2</a></td><td><div class="summary"> Value of type T2. Valid when type is 2. </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID4RBSection" class="collapsibleSection">
            Some methods have one or several parameters that must be one of several types. There are several ways of implementing such functions.<br />
            1. Overloaded methods. However some programmers often don't like it, because in some cases need to create many overloads, then maintain their documentation. Also then method users have to spend much time to find the correct overload.<br />
            2. Generic methods. However in most cases the compiler cannot protect from using an unsupported type. Also then method users don't see the allowed types instantly in intellisense.<br />
            3. Using the Object type for the parameter. However then the compiler does not protect from using an unsupported type. Also then method users don't see the allowed types instantly in intellisense. Also slower, especially with value types (need boxing).<br />
            4. Using this type for the parameter. It does not have the above problems.<br /><br />
            When a parameter is of type Types&lt;T1, T2&gt;, method users can pass only values of type T1 or T2, else compiler error. They see the allowed types instantly in intellisense.<br />
            Also there are similar types that can be used to support more parameter types:<br /><a href="T_Au_Types_Types_3.htm">Types<span id="LSTB711787F_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB711787F_16?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T1, T2, T3<span id="LSTB711787F_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB711787F_17?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a><a href="T_Au_Types_Types_4.htm">Types<span id="LSTB711787F_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB711787F_18?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T1, T2, T3, T4<span id="LSTB711787F_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB711787F_19?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a><br /><br />
            To support null (for example for optional parameters), use nullable. See examples.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID5RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> Example1(Types&lt;<span class="highlight-keyword">string</span>, IEnumerable&lt;<span class="highlight-keyword">string</span>&gt;&gt; x)
{
    <span class="highlight-keyword">switch</span>(x.type) {
    <span class="highlight-keyword">case</span> <span class="highlight-number">1</span>: Print(<span class="highlight-literal">"string"</span>, x.v1); <span class="highlight-keyword">break</span>;
    <span class="highlight-keyword">case</span> <span class="highlight-number">2</span>: Print(<span class="highlight-literal">"IEnumerable&lt;string&gt;"</span>, x.v2); <span class="highlight-keyword">break</span>;
    <span class="highlight-keyword">default</span>: <span class="highlight-keyword">throw</span> <span class="highlight-keyword">new</span> ArgumentException(); <span class="highlight-comment">//0 if has default value, eg assigned default(Types&lt;string, IEnumerable&lt;string&gt;&gt;), unlikely</span>
    }
}

<span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> Example2(<span class="highlight-keyword">int</span> param1, Types&lt;<span class="highlight-keyword">int</span>, <span class="highlight-keyword">double</span>&gt;? optionalParam = <span class="highlight-keyword">null</span>)
{
    <span class="highlight-keyword">var</span> p = optionalParam.GetValueOrDefault();
    <span class="highlight-keyword">switch</span>(p.type) {
    <span class="highlight-keyword">case</span> <span class="highlight-number">0</span>: Print(<span class="highlight-literal">"null"</span>); <span class="highlight-keyword">break</span>;
    <span class="highlight-keyword">case</span> <span class="highlight-number">1</span>: Print(<span class="highlight-literal">"int"</span>, p.v1); <span class="highlight-keyword">break</span>;
    <span class="highlight-keyword">case</span> <span class="highlight-number">2</span>: Print(<span class="highlight-literal">"double"</span>, p.v2); <span class="highlight-keyword">break</span>;
    }
}

<span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> TestExamples()
{
    Example1(<span class="highlight-literal">"S"</span>);
    Example1(<span class="highlight-keyword">new</span> <span class="highlight-keyword">string</span>[] { <span class="highlight-literal">"a"</span>, <span class="highlight-literal">"b"</span> });
    <span class="highlight-comment">//Example1(5); //compiler error</span>
    <span class="highlight-comment">//Example1(null); //compiler error</span>
    Example1((<span class="highlight-keyword">string</span>)<span class="highlight-keyword">null</span>);
    <span class="highlight-comment">//Example1(default(Types&lt;string, IEnumerable&lt;string&gt;&gt;)); //the function throws exception</span>

    Example2(<span class="highlight-number">0</span>, <span class="highlight-number">5</span>);
    Example2(<span class="highlight-number">0</span>, <span class="highlight-number">5.5</span>);
    <span class="highlight-comment">//Example2(0, "S"); //compiler error</span>
    Example2(<span class="highlight-number">0</span>, <span class="highlight-keyword">null</span>);
    Example2(<span class="highlight-number">0</span>);
    <span class="highlight-comment">//Example2(0, default(Types&lt;int, double&gt;)); //the function throws exception</span>
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID6RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Au_Types.htm">Au.Types Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"> </div></body></html>